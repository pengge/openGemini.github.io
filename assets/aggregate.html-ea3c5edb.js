import{_ as r,X as a,Y as s,Z as t,a1 as e,$ as o,a3 as n,C as i}from"./framework-a5f096d1.js";const u={},l=n("<p>This chapter mainly introduces the following functions:</p><table><thead><tr><th>aggregate function</th><th>description</th></tr></thead><tbody><tr><td>COUNT()</td><td>Returns the number of non-null field values</td></tr><tr><td><strong>COUNT(time)</strong></td><td>the total amount of data by time column</td></tr><tr><td>MEAN()</td><td>Returns the arithmetic average of field values</td></tr><tr><td>SUM ()</td><td>Returns the sum of field values.</td></tr><tr><td>MODE()</td><td>Returns the most frequent value in a list of field values</td></tr><tr><td>STDDEV()</td><td>Returns the standard deviation of field values</td></tr><tr><td>MEDIAN()</td><td>Returns the middle value from a sorted list of field values</td></tr><tr><td>SPREAD()</td><td>Returns the difference between the minimum and maximum field values</td></tr><tr><td>DISTINCT()</td><td>Returns the list of unique field values</td></tr><tr><td><strong>IRATE()</strong></td><td>( |An - An-1| )/( |Tn-1 - Tn| )</td></tr><tr><td><strong>RATE()</strong></td><td>( |A1-A2| )/( |T1-T2|)</td></tr><tr><td>MOVING_AVERAGE()</td><td>Returns the rolling average across a window of subsequent field values</td></tr><tr><td>HOLT_WINTERS()</td><td>Returns N number of predicted field values</td></tr><tr><td>CUMULATIVE_SUM()</td><td>Returns the running total of subsequent field values</td></tr><tr><td>DERIVATIVE()</td><td>Returns the rate of change between subsequent field values</td></tr><tr><td>DIFFERENCE()</td><td>Returns the result of subtraction between subsequent field values</td></tr><tr><td>ELAPSED()</td><td>Returns the difference between subsequent field valueâ€™s timestamps</td></tr><tr><td>NON_NEGATIVE_DERIVATIVE()</td><td>Returns the non-negative rate of change between subsequent field values</td></tr><tr><td>NON_NEGATIVE_DIFFERENCE()</td><td>Returns the non-negative result of subtraction between subsequent field values</td></tr></tbody></table>",2),h={class:"hint-container tip"},c=t("p",{class:"hint-container-title"},"Tips",-1),f={href:"https://docs.influxdata.com/influxdb/v1.8/query_language/functions/#content",target:"_blank",rel:"noopener noreferrer"},m=t("p",null,"The community is working hard to complete the relevant documents.",-1),_=n('<h2 id="count-time" tabindex="-1"><a class="header-anchor" href="#count-time" aria-hidden="true">#</a> COUNT(time)</h2><h2 id="irate" tabindex="-1"><a class="header-anchor" href="#irate" aria-hidden="true">#</a> IRATE</h2><h2 id="rate" tabindex="-1"><a class="header-anchor" href="#rate" aria-hidden="true">#</a> RATE</h2>',3);function E(g,b){const d=i("ExternalLinkIcon");return a(),s("div",null,[l,t("div",h,[c,t("p",null,[e("The bold part in the list is the unique method of openGemini. Other methods are compatible with the usage of InfluxDB. "),t("a",f,[e("You can refer to the corresponding function usage of InfluxDB"),o(d)]),e(".")]),m]),_])}const R=r(u,[["render",E],["__file","aggregate.html.vue"]]);export{R as default};
