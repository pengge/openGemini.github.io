import{_ as c}from"./dashboard-bcb3703c.js";import{_ as u,X as r,Y as d,Z as n,$ as a,a0 as t,a1 as s,a3 as o,C as e}from"./framework-a5f096d1.js";const m="/assets/monitor-76224219.png",k="/assets/monitor-1-a91a7b13.png",v="/assets/monitor-2-db43abe1.png",b="/assets/monitor-3-b055ae4a.png",g="/assets/monitor-4-2431b0ff.png",f="/assets/monitor-5-c85f153d.png",q="/assets/monitor-5-c85f153d.png",h={},y=n("p",null,"openGemini提供了260+监控指标，来监控集群的各种状态，下面将介绍如何开启监控项，并结合Grafana可视化监控数据。",-1),_=n("p",null,"相关脚本使用",-1),w=n("ul",null,[n("li",null,"scripts/install_cluster.sh，用于在本地拉起一个集群（localhost上监听)"),n("li",null,"scripts/install_monitor.sh, 用于在本地拉起一个ts-monitor")],-1),x=n("p",null,"参考",-1),G=o('<h2 id="整体技术方案" tabindex="-1"><a class="header-anchor" href="#整体技术方案" aria-hidden="true">#</a> 整体技术方案</h2><p>监控系统的整体部署方案如下图所示：</p><figure><img src="'+m+'" alt="技术方案" tabindex="0" loading="lazy"><figcaption>技术方案</figcaption></figure><p>该方案包含监控数据生产、采集、存储、分析告警和展示等所有功能，主要由四部分组成：</p><ul><li>openGemini集群</li></ul><p>随着业务运行，openGemini持续输出内核运行状态的各项指标数据。openGemini同时支持两种方式输出指标数据，第一种将指标数据输出到日志中；第二种则为HTTP方式，采用openGemini的数据格式，接收端需使用InfluxDB或openGemini这两种数据库均可。</p><ul><li>指标采集</li></ul><p>如上所述，采用HTTP方式输出指标数据，则无需额外的数据采集工具，但会缺乏一些监控指标，如磁盘利用率、创建的表总数、时间线数量、创建的数据库总数等。如果将数据输出到日志中时，则需要使用ts-monitor进行指标数据采集，除内核运行状态指标数据之外，ts-monitor工具还将采集如磁盘利用率、创建的表总数、时间线数量、创建的数据库总数等指标。ts-monitor同样将指标数据转换为openGemini的数据格式进行上报。</p><ul><li>数据存储</li></ul><p>考虑到监控系统频繁的查询操作，长期来看，为避免对业务集群的运行资源造成竞争，从而影响业务效率，因此建议将指标数据转存到专门的存储节点。openGemini提供了单机和集群两种版本，通常对于集群自身的指标数据保存，单机性能已然足够。与此同时，openGemini同样支持Grafana，且单机性能更优于InfluxDB，建议直接使用openGemini单机版部署，用于存储监控指标数据。</p><ul><li>数据可视化与告警</li></ul><p>Grafana是业界非常普遍使用的一款开源数据可视化工具，可以做数据监控和数据统计，带有告警功能。选择它用在监控系统中最合适不过。</p>',12),E=o('<h2 id="方式一-使用ts-monitor从业务日志中采集监控指标数据" tabindex="-1"><a class="header-anchor" href="#方式一-使用ts-monitor从业务日志中采集监控指标数据" aria-hidden="true">#</a> 方式一：使用ts-monitor从业务日志中采集监控指标数据</h2><figure><img src="'+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如图所示，监控数据以log files方式输出，每个节点(node)上部署一个ts-monitor，用于采集该节点上所有openGemini组件的监控指标数据，然后将数据写入到远端监控节点上的openGemini中，最后使用Grafana作为监控/告警面板来展示监控数据。</p><p>当前部署方式共涉及两个配置文件：</p><ul><li>openGemini.conf 或 openGemini.single.conf</li><li>monitor.conf</li></ul><p>openGemini.conf主要配置[monitor]，必要配置项如下表所示</p><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">pushers</td><td style="text-align:left;">数据输出方式，有http和file两种，当前这种方式下，选择file</td></tr><tr><td style="text-align:left;">store-enabled</td><td style="text-align:left;">设置为true，打开监控。关闭则设置为false</td></tr><tr><td style="text-align:left;">store-interval</td><td style="text-align:left;">指标采集周期</td></tr><tr><td style="text-align:left;">store-path</td><td style="text-align:left;">当前方式下，指标数据会写入到文件，这里指指标数据文件的保存路径</td></tr></tbody></table><h3 id="配置示例" tabindex="-1"><a class="header-anchor" href="#配置示例" aria-hidden="true">#</a> 配置示例</h3><p>当前配置会将openGemini各组件的监控日志每10秒写一次到/tmp/openGemini/metric/metric.data中。</p><div class="language-editorconfig line-numbers-mode" data-ext="editorconfig"><pre class="language-editorconfig"><code><span class="token section selector"><span class="token punctuation">[</span>monitor<span class="token punctuation">]</span></span>
  <span class="token key attr-name">pushers</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;file&quot;</span>
  <span class="token key attr-name">store-enabled</span> <span class="token value attr-value"><span class="token punctuation">=</span> true</span>
  <span class="token key attr-name">store-database</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;monitor&quot;</span>
  <span class="token key attr-name">store-interval</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;10s&quot;</span>
  <span class="token key attr-name">store-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/metric/metric.data&quot;</span>
  <span class="token key attr-name">compress</span> <span class="token value attr-value"><span class="token punctuation">=</span> false</span>
  <span class="token comment"># http-endpoint = &quot;&quot;</span>
  <span class="token comment"># username = &quot;&quot;</span>
  <span class="token comment"># password = &quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果是运行openGemini单机版，需要将上述配置添加到openGemini.single.conf中。</p></div><p>接下来介绍ts-monitor组件的配置文件monitor.conf如何配置。</p><div class="language-editorconfig line-numbers-mode" data-ext="editorconfig"><pre class="language-editorconfig"><code><span class="token section selector"><span class="token punctuation">[</span>monitor<span class="token punctuation">]</span></span>
  <span class="token comment"># [必填]当前节点的ip地址或者可以唯一标识该节点的信息，比如hostname</span>
  <span class="token key attr-name">host</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{addr}}&quot;</span>
  <span class="token comment"># [必填]ts-monitor采集指标数据的目录，应与openGemini.conf -&gt; [monitor] -&gt; store-path配置保持一致</span>
  <span class="token key attr-name">metric-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/metric/&quot;</span>
  <span class="token comment"># [必填]ts-monitor会采集集群的错误日志。应与openGemini.conf -&gt; [logging] -&gt; path配置保持一致</span>
  <span class="token key attr-name">error-log-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/logs&quot;</span>
  <span class="token comment"># 如果当前节点没有部署ts-store组件，可注释，不配置</span>
  <span class="token comment"># 该配置项与计算磁盘空间利用率有关，应与openGemini.conf -&gt; [data] -&gt; store-data-dir 配置保持一致</span>
  <span class="token key attr-name">disk-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/data&quot;</span>
  <span class="token comment"># 如果当前节点没有部署ts-store组件，可注释，不填写</span>
  <span class="token comment"># 出于安全考虑，建议把openGemini的WAL单独存储一个磁盘分区，这样数据盘和WAL互相不受影响。</span>
  <span class="token comment"># 该配置项与计算WAL的磁盘空间利用率有关，应与openGemini.conf -&gt; [data] -&gt; store-wal-dir 配置保持一致</span>
  <span class="token key attr-name">aux-disk-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/data/wal&quot;</span>
  <span class="token comment"># [必填]当前节点上已部署openGemini的组件，用逗号分隔。该配置项与监控进程状态有关</span>
  <span class="token key attr-name">process</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;ts-store,ts-sql,ts-meta&quot;</span>
  <span class="token comment"># [可保持默认配置]保存当前已经采集过的metric.data文件信息和文件内的位置，防止ts-monitor重启后重复采集数据</span>
  <span class="token key attr-name">history-file</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;history.txt&quot;</span>
  <span class="token comment"># Is the metric compressed.</span>
  <span class="token key attr-name">compress</span> <span class="token value attr-value"><span class="token punctuation">=</span> false</span>
  
<span class="token section selector"><span class="token punctuation">[</span>query<span class="token punctuation">]</span></span>
  <span class="token comment"># 这部分配置，如果多个节点上都部署有ts-monitor,则在其中一个ts-monitor开启如下配置即可</span>
  <span class="token comment"># 设置为true，表示ts-monitor可以定期向业务集群发送\`\`\`SHOW DATABASES, SHOW MEASUREMENTS\`\`\`等查询命令，统计创建的DB和表的数量</span>
  <span class="token key attr-name">query-enable</span> <span class="token value attr-value"><span class="token punctuation">=</span> false</span>
  <span class="token comment"># 业务集群中ts-sql的监听地址和端口</span>
  <span class="token key attr-name">http-endpoint</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{query_addr}}:8086&quot;</span>
  <span class="token comment"># ts-monitor向openGemini业务集群发送查询命令的时间间隔</span>
  <span class="token key attr-name">query-interval</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;5m&quot;</span>
  <span class="token comment"># 如果业务集群开启了https和用户密码鉴权，ts-monitor将采用https方式连接业务集群，连接过程需要携带用户名密码登陆</span>
  <span class="token comment"># 这里有暴露业务集群用户名/密码的风险，存在安全风险</span>
  <span class="token comment"># username = &quot;&quot;</span>
  <span class="token comment"># password = &quot;&quot;</span>
  <span class="token comment"># https-enable = false</span>
  
<span class="token section selector"><span class="token punctuation">[</span>report<span class="token punctuation">]</span></span>
  <span class="token comment"># ts-monitor采集的指标数据将会上报到单独的节点进行存储，这里将配置目标节点上的数据库(openGemini)地址、db、用户密码、保留策略等信息</span>
  <span class="token comment"># 目标节点上openGemini的监听地址和端口</span>
  <span class="token key attr-name">address</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{report_addr}}:8086&quot;</span>
  <span class="token comment"># 数据写入的db名称</span>
  <span class="token key attr-name">database</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;monitor&quot;</span>
  <span class="token comment"># 如果目标节点上的openGemini开启了https和用户密码鉴权，ts-monitor将采用https方式连接，连接过程需要携带用户名密码登陆</span>
  <span class="token comment"># username = &quot;&quot;</span>
  <span class="token comment"># password = &quot;&quot;</span>
  <span class="token comment"># https-enable = false</span>
  <span class="token comment"># 数据保留策略名称和数据保留时长，可默认. 表示监控数据将在168小时后被自动删除</span>
  <span class="token key attr-name">rp</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;autogen&quot;</span>
  <span class="token key attr-name">rp-duration</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;168h&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方式二-监控指标数据直接push到监控节点" tabindex="-1"><a class="header-anchor" href="#方式二-监控指标数据直接push到监控节点" aria-hidden="true">#</a> 方式二：监控指标数据直接push到监控节点</h2><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如图所示，监控数据直接push到监控节点的方式不需要在业务集群中部署ts-monitor，但这种情况下要求业务集群能够直连监控节点并且会缺乏一些监控指标，如集群节点的CPU利用率、磁盘利用率、创建的表总数、时间线数量、创建的数据库总数等。</p><p>该方式下，只需要配置openGemini.conf就好，必要配置项如下表所示。</p><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">pushers</td><td style="text-align:left;">数据输出方式，有http和file两种，当前这种方式下，选择http</td></tr><tr><td style="text-align:left;">store-enabled</td><td style="text-align:left;">设置为true，打开监控。关闭则设置为false</td></tr><tr><td style="text-align:left;">store-database</td><td style="text-align:left;">监控数据需要写入到监控节点上单机openGemini的数据库名，需提前创建相关数据库</td></tr><tr><td style="text-align:left;">store-interval</td><td style="text-align:left;">指标采集周期</td></tr><tr><td style="text-align:left;">http-endpoint</td><td style="text-align:left;">监控节点上部署的单机openGemini的监听地址和端口</td></tr></tbody></table><h3 id="配置示例-1" tabindex="-1"><a class="header-anchor" href="#配置示例-1" aria-hidden="true">#</a> 配置示例</h3><p>当前配置会将监控数据每隔10秒写一次到监控节点“192.70.3.43:8086”的“monitor”数据库中</p><div class="language-editorconfig line-numbers-mode" data-ext="editorconfig"><pre class="language-editorconfig"><code><span class="token section selector"><span class="token punctuation">[</span>monitor<span class="token punctuation">]</span></span>
  <span class="token key attr-name">pushers</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;http&quot;</span>
  <span class="token key attr-name">store-enabled</span> <span class="token value attr-value"><span class="token punctuation">=</span> true</span>
  <span class="token key attr-name">store-database</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;monitor&quot;</span>
  <span class="token key attr-name">store-interval</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;10s&quot;</span>
  <span class="token comment"># store-path = &quot;/tmp/openGemini/metric/ts-sql/metric.data&quot;</span>
  <span class="token comment"># compress = false</span>
  <span class="token key attr-name">http-endpoint</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;192.70.3.43:8086&quot;</span>
  <span class="token comment"># 如果192.70.3.43节点上的openGemini开启了https和用户密码鉴权，ts-monitor将采用https方式连接，连接过程需要携带用户名密码登陆</span>
  <span class="token comment"># 这里可能会暴露用户名和密码，存在一定安全风险</span>
  <span class="token comment"># username = &quot;&quot;</span>
  <span class="token comment"># password = &quot;&quot;</span>
  <span class="token comment"># http-endpoint = &quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="grafana配置" tabindex="-1"><a class="header-anchor" href="#grafana配置" aria-hidden="true">#</a> Grafana配置</h2>`,22),R={href:"http://192.70.3.43:3000",target:"_blank",rel:"noopener noreferrer"},B=o('<figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入创建数据源界面，其中name填写为新创建的数据源的名称，URL为监控节点上openGemini的地址和端口，database为监控数据所在数据库名称</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>数据源创建完成后可以在Grafana中新建看板来完成监控用户感兴趣的内容，如下图所示，建立一个Panel，选择Data source为刚刚建立的monitor，然后通过图形化查询选择界面来建立看板的查询语句</p><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>除了使用图形化界面查询，也可以点击“Query Inspector”来使用直接输入查询语句的方式建立Panel。如下图所示，先选择数据源为刚才建立的“monitor”，然后可以通过如下查询语句来查询数据库中cpu的平均使用率</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;CpuUsage&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span>  $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;system&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span>$__interval<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;host&quot;</span> fill<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+q+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>除了“CpuUsage”监控数据还包括其他的一些指标用来建立监控面板，例如跟集群整体健康状态相关的一些查询如下表所示</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询CPU利用率</span>
<span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;CpuUsage&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;system&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span>$__interval<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;host&quot;</span> fill<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span>
<span class="token comment"># 查询内存使用量</span>
<span class="token keyword">SELECT</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&quot;MemUsage&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;system&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span>$__interval<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;host&quot;</span> fill<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span>
<span class="token comment"># 查询磁盘空间利用率</span>
<span class="token keyword">SELECT</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&quot;DiskUsage&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;system&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span>$__interval<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;host&quot;</span> fill<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span>
<span class="token comment"># 查看进程状态</span>
<span class="token keyword">SELECT</span> <span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;StoreStatus&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&quot;store&quot;</span><span class="token punctuation">,</span> 
       <span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;SqlStatus&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&quot;sql&quot;</span><span class="token punctuation">,</span>
       <span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;MetaStatus&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&quot;meta&quot;</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;system&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token string">&quot;host&quot;</span>
<span class="token comment"># ts-meta 主备检查</span>
<span class="token keyword">SELECT</span> <span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;Status&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&quot;status&quot;</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;metaRaft&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token string">&quot;hostname&quot;</span>
<span class="token comment"># store 进程健康检查</span>
<span class="token keyword">SELECT</span> <span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;Status&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&quot;status&quot;</span> 
<span class="token keyword">FROM</span> $<span class="token keyword">database</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token string">&quot;meta&quot;</span> 
<span class="token keyword">WHERE</span> $timeFilter 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token string">&quot;Host&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示" aria-hidden="true">#</a> 效果展示</h2><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',12);function S(F,$){const i=e("RouterLink"),p=e("font"),l=e("ExternalLinkIcon");return r(),d("div",null,[y,_,w,x,n("ul",null,[n("li",null,[a(i,{to:"/zh/guide/reference/kernel_metrics.html#grafana%E7%9C%8B%E6%9D%BF%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E7%A4%BA%E4%BE%8B"},{default:t(()=>[s("Grafana看板常用查询语句")]),_:1})]),n("li",null,[a(i,{to:"/zh/guide/reference/kernel_metrics.html"},{default:t(()=>[s("内核指标项说明")]),_:1})])]),G,n("p",null,[s("综上所述，该方案的优点是部署简单、易获取（所有组件开源）。"),a(p,{color:"green"},{default:t(()=>[s("接下来将重点介绍不同数据采集方式对应的部署和配置")]),_:1})]),E,n("p",null,[s("Grafana安装过程略，启动Grafana后，通过浏览器访问"),n("a",R,[s("http://192.70.3.43:3000"),a(l)]),s(" ，添加数据源选择InfluxDB（openGemini兼容InfluxDB）")]),B])}const U=u(h,[["render",S],["__file","monitor.html.vue"]]);export{U as default};
