import{_ as i,X as r,Y as o,Z as a,a1 as e,$ as n,a0 as c,a3 as d,C as s}from"./framework-a5f096d1.js";const p={},u=a("h2",{id:"sample-data",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#sample-data","aria-hidden":"true"},"#"),e(" Sample data")],-1),h=d('<h2 id="clients" tabindex="-1"><a class="header-anchor" href="#clients" aria-hidden="true">#</a> Clients</h2><p>Before learning the query statement, you need to use the client ts-cli to connect to openGemini:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>~$ ts-cli <span class="token parameter variable">-database</span> NOAA_water_database\nopenGemini CLI <span class="token number">0.1</span>.0 <span class="token punctuation">(</span>rev-revision<span class="token punctuation">)</span>\nPlease use <span class="token variable"><span class="token variable">`</span>quit<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">exit</span><span class="token variable">`</span></span> or <span class="token variable"><span class="token variable">`</span>Ctrl-D<span class="token variable">`</span></span> to <span class="token builtin class-name">exit</span> this program.\n<span class="token operator">&gt;</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax" aria-hidden="true">#</a> Syntax</h2>',4),m={href:"https://docs.influxdata.com/influxdb/v1.8/query_language/explore-data/#the-where-clause",target:"_blank",rel:"noopener noreferrer"};function b(v,_){const t=s("RouterLink"),l=s("ExternalLinkIcon");return r(),o("div",null,[u,a("p",null,[e("Before we start exploring the data, to better demonstrate the syntax below, let's import publicly available data from the National Oceanic and Atmospheric Administration's (NOAA) Center for Operational Oceanic Products and Services, first follow the document "),n(t,{to:"/guide/reference/sample_data.html"},{default:c(()=>[e("Sample data")]),_:1}),e(" to import data.")]),h,a("p",null,[e("openGemini is compatible with InfluxQL. For detail InfluxQL’s SELECT statement and useful query syntax for exploring your data, see "),a("a",m,[e("InfluxQL’s SELECT statement"),n(l)])])])}const x=i(p,[["render",b],["__file","select.html.vue"]]);export{x as default};
