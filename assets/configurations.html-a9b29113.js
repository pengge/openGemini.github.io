import{_ as c,X as s,Y as r,Z as l,a1 as o,$ as e,a3 as t,C as n}from"./framework-a5f096d1.js";const p={},a=l("p",null,"openGemini.conf 配置项解释，openGemini.single.conf亦可参考本内容",-1),u=l("h2",{id:"common",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#common","aria-hidden":"true"},"#"),o(" [common]")],-1),g=l("p",null,"common是ts-sql、ts-store、ts-meta公共的配置项。",-1),h=l("strong",null,"meta-join",-1),m=t("<ul><li><p>类型: <code>[]string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>SQL / STOR和META的RPC通信地址。比如：<code>[&quot;127.0.0.1:8092&quot;, &quot;127.0.0.2:8092&quot;, &quot;127.0.0.3:8092&quot;]</code></p></li></ul><p><strong>ha-enable</strong></p><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>基于共享存储的HA开关，目前仅支持共享存储可设置为true。</p></li><li><p>生产环境不建议开启。</p></li></ul><p><strong>executor-memory-size-limit</strong></p><ul><li><p>类型: <code>string | toml.Size</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>执行内存大小限制，比如 <code>256GB</code>，<code>0</code>表示不限制。</p></li></ul><p><strong>executor-memory-wait-time</strong></p><ul><li><p>类型: <code>string | toml.Duration</code></p></li><li><p>默认值: <code>0s</code></p></li><li><p>执行内存等待时间，比如 <code>120s</code>，<code>0s</code>表示不限制。</p></li></ul><p><strong>pprof-enabled</strong></p><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启go pprof服务，监控内存、CPU、goroutine等信息。</p></li></ul>",9),b=l("strong",null,"cpu-num",-1),_=t('<ul><li><p>类型: <code>int</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>可使用的cpu核心数，<code>0</code>表示自动获取，docker环境中建议手动设置。</p></li></ul><p><strong>memory-size</strong></p><ul><li><p>类型: <code>string | toml.Size</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>可使用的内存大小，比如：<code>256GB</code>，<code>0</code>表示不限制。</p></li></ul><p><strong>ignore-empty-tag</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否忽略空tag。</p></li></ul><p><strong>report-enable</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否上报遥测数据到openGemini服务器。</p></li></ul><p><strong>enable-tag-array</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>写入是否支持tag数组。</p></li></ul><h2 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> [meta]</h2><p>meta是ts-meta专属配置。</p>',11),f=l("strong",null,"bind-address",-1),q=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("meta提供服务的地址，比如："),l("code",null,"127.0.0.1:8088"),o("。")])])],-1),x=l("strong",null,"http-bind-address",-1),y=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("meta提供HTTP服务的地址，比如："),l("code",null,"127.0.0.1:8091"),o("。可外部访问。")])])],-1),k=l("strong",null,"rpc-bind-address",-1),v=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("meta提供RPC服务的地址，比如："),l("code",null,"127.0.0.1:8092"),o("。仅内部通信使用。")])])],-1),D=l("strong",null,"dir",-1),T=t('<ul><li><p>类型: <code>string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>meta数据保存目录。</p></li></ul><p><strong>expand-shards-enable</strong></p><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否扩大shards。</p></li></ul><p><strong>retention-autocreate</strong></p><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否自动创建retention policy。</p></li></ul><p><strong>election-timeout</strong></p><ul><li><p>类型: <code>string | toml.Duration</code></p></li><li><p>默认值: <code>1s</code></p></li><li><p>选主超时时间。</p></li></ul><p><strong>heartbeat-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1s</code></li><li>心跳超时时间。</li></ul><p><strong>leader-lease-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: 60s`</li><li>leader租赁超时时间。</li></ul><p><strong>commit-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>50ms</code></li><li>事件提交超时时间。</li></ul><p><strong>cluster-tracing</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否记录trace日志。</p></li></ul><p><strong>logging-enabled</strong></p><ul><li>deprecated</li></ul><p><strong>lease-duration</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1m</code></li><li>租赁期限。</li></ul><p><strong>meta-version</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>2</code></li><li>meta版本。</li></ul><p><strong>split-row-threshold</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>10000</code></li><li>row最大行数分裂阈值。</li></ul><p><strong>imbalance-factor</strong></p><ul><li>类型: <code>float</code></li><li>默认值: <code>0.3</code></li><li>不平衡因子。</li></ul><p><strong>auth-enabled</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启鉴权。</p></li></ul><p><strong>https-enabled</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启HTTPS。</p></li></ul><p><strong>https-certificate</strong></p><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，证书路径。</p></li></ul><p><strong>https-private-key</strong></p><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，私钥路径。</p></li></ul><p><strong>ptnum-pernode</strong></p><ul><li><p>类型: <code> int</code></p></li><li><p>默认值: <code>1</code></p></li><li><p>每个store节点的PT的数量。</p></li></ul><h2 id="coordinator" tabindex="-1"><a class="header-anchor" href="#coordinator" aria-hidden="true">#</a> [coordinator]</h2><p>ts-sql的配置，用于和ts-store通信相关。</p><p><strong>write-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>120s</code></li><li>数据写入超时时间。</li></ul><p><strong>shard-writer-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30s</code></li><li>数据写入shard内超时时间。</li></ul><p><strong>shard-mapper-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>10s</code></li><li>数据打散到指定shard的超时时间。</li></ul><p><strong>shard-tier</strong></p><ul><li>类型: <code>string</code></li><li>默认值: <code>warm</code></li><li>数据形态，可选值：<code>warm</code>, <code>hot</code>。</li><li><code>hot</code>模式会比较耗内存。</li></ul><p><strong>rp-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>100</code></li><li>所有database，可以创建的retention policy的上限。</li></ul><p><strong>force-broadcast-query</strong></p><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否强制使用广播到所有节点进行查询。</p></li></ul><p><strong>time-range-limit</strong></p><ul><li>类型: <code> []string</code></li><li>默认值: <code>[&quot;0s&quot;, &quot;0s&quot;]</code></li><li>限制写的时间范围。比如：<code>[&quot;72h&quot;, &quot;48h&quot;]</code>，表示仅支持写入<strong>3天前到2天后之间</strong>的数据。如果是默认值，则表示不限制。</li></ul><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> [http]</h2><p>ts-sql专属配置。</p>',53),w=l("strong",null,"bind-address",-1),S=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("sql提供服务的地址，比如："),l("code",null,"127.0.0.1:8086"),o("。")])])],-1),A=l("strong",null,"auth-enabled",-1),E=l("ul",null,[l("li",null,[o("类型: "),l("code",null,"bool")]),l("li",null,[o("默认值: "),l("code",null,"false")]),l("li",null,"是否开启身份校验功能。")],-1),z=l("p",null,[l("strong",null,"weakpwd-path")],-1),C=l("li",null,[o("类型: "),l("code",null,"string")],-1),H=l("li",null,[o("默认值: "),l("code",null,"/tmp/openGemini/weakpasswd.properties")],-1),I={href:"https://github.com/openGemini/openGemini/blob/main/config/weakpasswd.properties",target:"_blank",rel:"noopener noreferrer"},G=t("<p><strong>pprof-enabled</strong></p><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启go pprof服务，监控内存、CPU、goroutine等信息。</p></li></ul><p><strong>max-connection-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>ts-sql的最大连接数限制。<code>0</code>表示不限制。</li></ul><p><strong>max-concurrent-write-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大写并发限制。<code>0</code>表示不限制。</li></ul><p><strong>max-enqueued-write-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大写队列数限制。<code>0</code>表示不限制。</li></ul><p><strong>enqueued-write-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30s</code></li><li>写队列中，等待超时时间。</li></ul><p><strong>max-concurrent-query-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大读并发限制。<code>0</code>表示不限制。</li></ul><p><strong>max-enqueued-query-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大读队列数限制。<code>0</code>表示不限制。</li></ul><p><strong>enqueued-query-timeout</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>5m</code></li><li>读队列中，等待超时时间。</li></ul><p><strong>chunk-reader-parallel</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>单个查询，并发度数量。<code>0</code>表示不限制。</li></ul><p><strong>max-body-size</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>25e6</code></li><li>写入的数据body体最大限制，单位byte。<code>0</code>表示不限制。</li></ul>",20),P=l("strong",null,"https-enabled",-1),B=t('<ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启HTTPS。</li></ul><p><strong>https-certificate</strong></p><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，证书路径。</p></li></ul><p><strong>https-private-key</strong></p><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，私钥路径。</p></li></ul><h2 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> [data]</h2><p>ts-store专属配置。</p>',7),L=l("strong",null,"store-ingest-addr",-1),W=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("数据接入的RPC地址，比如："),l("code",null,"127.0.0.1:8400"),o("。")])])],-1),R=l("strong",null,"store-select-addr",-1),N=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,[o("数据查询的RPC地址，比如："),l("code",null,"127.0.0.1:8401"),o("。")])])],-1),F=l("strong",null,"store-data-dir",-1),M=l("ul",null,[l("li",null,[l("p",null,[o("类型: "),l("code",null,"string")])]),l("li",null,[l("p",null,[o("默认值: "),l("code",null,"无")])]),l("li",null,[l("p",null,"主要数据存储目录。")])],-1),V=l("strong",null,"store-wal-dir",-1),O=t('<ul><li>类型: <code>string</code></li><li>默认值: <code>无</code></li><li>写前日志WAL存储目录。</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>建议和<strong>store-data-dir</strong> 不同硬盘，防止IO带宽不足。</p></div><p><strong>store-meta-dir</strong></p><div class="hint-container warning"><p class="hint-container-title">Note</p><p>deprecated</p></div><p><strong>wal-enabled</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启WAL功能。</li></ul><p><strong>wal-sync-interval</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>100ms</code></li><li>WAL定时刷盘时间周期。</li></ul><p><strong>wal-replay-parallel</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否并发回放WAL。</li></ul><p><strong>wal-replay-async</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否异步回放WAL。</li></ul><p><strong>imm-table-max-memory-percentage</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>10</code></li><li>immutable最大占用内存百分比。</li></ul><p><strong>write-cold-duration</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>5s</code></li><li>数据写冷（下盘）周期。</li></ul><p><strong>shard-mutable-size-limit</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <a href="#memory-size">memorySize</a>/256，并强制介于 <strong>8MB - 1GB</strong> 之间。</li><li>单个shard中数据占用内存大小限制。</li></ul><p><strong>node-mutable-size-limit</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <a href="#memory-size">memory-size</a>/16，并强制介于 <strong>32MB - 16GB</strong> 之间。</li><li>节点中数据占用内存大小限制。</li></ul><p><strong>max-write-hang-time</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>15s</code></li><li>数据hang住，最大时间。</li></ul><p><strong>max-concurrent-compactions</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <a href="#cpu-num">cpu-num</a>数，并介于 <strong>2-32</strong>之间。</li><li>最大并发compaction数量。<code>0</code>表示执行上面默认值的算法。</li></ul><p><strong>compact-full-write-cold-duration</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1h</code></li><li>下盘数据执行full compaction周期。</li></ul><p><strong>max-full-compactions</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>1</code></li><li>最大并发compaction数量。<code>0</code>表示执行如下算法：<a href="#cpu-num">cpu-num</a>数，并介于 <strong>1-32</strong>之间。</li></ul><p><strong>compact-throughput</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>80m</code></li><li>compact吞吐量。</li></ul><p><strong>compact-throughput-burst</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>90m</code></li><li>compact吞吐量突发。</li></ul><p><strong>compact-recovery</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启compact失败后自动恢复，防止进程Panic。</li></ul><p><strong>snapshot-throughput</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>打快照吞吐量。</li></ul><p><strong>snapshot-throughput-burst</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>打快照突发吞吐量。</li></ul><p><strong>cache-table-data-block</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否缓存查询出来的数据。</li></ul><p><strong>cache-table-meta-block</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否缓存查询出来的元数据。</li></ul><p><strong>enable-mmap-read</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启mmap。</li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>目前建议不要开启，会占用比较多的内存。</p></div><p><strong>read-cache-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>读缓存大小限制，单位byte。</li></ul><p><strong>write-concurrent-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>写并发数限制。</li></ul><p><strong>open-shard-limit</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>ts-store启动同时打开shard的数量限制。<code>0</code>表示不限制。</li></ul><p><strong>readonly</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>ts-store只读功能是否打开。</li></ul><p><strong>downsample-write-drop</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否支持将采样丢点，仅在ts-store只读功能打开情况下可用。</li></ul><p><strong>max-wait-resource-time</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>0s</code></li><li>TODO</li></ul><p><strong>max-series-parallelism-num</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>时间线并发度最大限制。<code>0</code>表述不限制。</li></ul><p><strong>max-shards-parallelism-num</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>shard并发度最大限制。<code>0</code>表述不限制。</li></ul><p><strong>chunk-reader-threshold</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>chunk reader阈值。<code>0</code>表述不限制。</li></ul><p><strong>min-chunk-reader-concurrency</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最小chunk reader并发度。<code>0</code>表述不限制。</li></ul><p><strong>min-shards-concurrency</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最小shard并发度。<code>0</code>表述不限制。</li></ul><p><strong>max-downsample-task-concurrency</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大将采样任务并发度。<code>0</code>表述不限制。</li></ul><p><strong>max-series-per-database</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>限制每个database中时间线数量，<code>0</code>表述不限制</li></ul><h2 id="data-ops-monitor" tabindex="-1"><a class="header-anchor" href="#data-ops-monitor" aria-hidden="true">#</a> [data.ops-monitor]</h2><p>该项为云服务配置，可忽略</p><h2 id="retention" tabindex="-1"><a class="header-anchor" href="#retention" aria-hidden="true">#</a> [retention]</h2><p>retention policy（保留策略）配置。</p><p><strong>enabled = true</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启。</li></ul><p><strong>check-interval = &quot;30m&quot;</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30m</code></li><li>检测周期。</li></ul><h2 id="downsample" tabindex="-1"><a class="header-anchor" href="#downsample" aria-hidden="true">#</a> [downsample]</h2><p>多级将采样配置。</p><p><strong>enable = true</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启。</li></ul><p><strong>check-interval = &quot;30m&quot;</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30m</code></li><li>检测周期。</li></ul><h2 id="logging" tabindex="-1"><a class="header-anchor" href="#logging" aria-hidden="true">#</a> [logging]</h2><p>日志全局配置。</p><p><strong>format</strong></p><ul><li>类型: <code>string</code></li><li>默认值: <code>auto</code></li><li>输出格式样式。</li></ul><p><strong>level</strong></p><ul><li>类型: <code>string</code></li><li>默认值: <code>info</code></li><li>日志记录的级别。可选值：<code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>panic</code>等</li></ul>',91),U=l("strong",null,"path",-1),j=t(`<ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>日志输出目录。</li></ul><p><strong>max-size</strong></p><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>日志单个文件最大大小。</li></ul><p><strong>max-num</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>16</code></li><li>日志最多保存的文件数。</li></ul><p><strong>max-age</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>16</code></li><li>日志最多保存的周期，单位天。</li></ul><p><strong>compress-enabled</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否压缩。</li></ul><h2 id="tls" tabindex="-1"><a class="header-anchor" href="#tls" aria-hidden="true">#</a> [tls]</h2><p>tsl全局配置。</p><p><strong>min-version</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>tls最小版本。建议：&quot;TLS1.2&quot;</li></ul><p><strong>ciphers</strong></p><ul><li>类型: <code>[]string</code></li><li>默认值: 无</li><li>ciphers。建议:</li></ul><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">ciphers</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="monitor" tabindex="-1"><a class="header-anchor" href="#monitor" aria-hidden="true">#</a> [monitor]</h2><p>ts-sql, ts-store, ts-meta 自身监控相关配置。</p><p><strong>pushers</strong></p><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;&quot;</code></li><li>监控指标推送方式，可选值：<code>http</code>, <code>file</code>。</li></ul><p><strong>store-enabled</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启monitor数据存储。</li></ul><p><strong>store-database</strong></p><ul><li>类型: <code>string</code></li><li>默认值: <code>_internal</code></li><li>监控指标保存到database名称。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><p><strong>store-interval</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>10s</code></li><li>数据保存周期。</li></ul><p><strong>store-path</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标保存路径和文件名称模板。仅在<code>pushers=&quot;file&quot;</code>可用。比如：<code>/tmp/openGemini/metric/metric.data</code></li></ul><p><strong>compress</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>监控指标保存到文件是否压缩。仅在<code>pushers=&quot;file&quot;</code>可用。</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>目前不建议打开</p></div><p><strong>http-endpoint</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标通过http发送到的endpoint。仅在<code>pushers=&quot;http&quot;</code>可用。比如：<code>127.0.0.1:8086</code></li></ul><p><strong>username</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 空</li><li>监控指标通过http发送到的endpoint的用户名。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><p><strong>password</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 空</li><li>监控指标通过http发送到的endpoint的密码。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><h2 id="gossip" tabindex="-1"><a class="header-anchor" href="#gossip" aria-hidden="true">#</a> [gossip]</h2><p>ts-store，ts-meta的gossip配置，用于检测集群各节点是否健康。</p><p><strong>enabled</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>集群:true，单机:false</code></li><li>是否开启gossip。</li></ul><p><strong>log-enabled</strong></p><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启gossip日志输出。</li></ul><p><strong>bind-address</strong></p><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>gossip绑定的地址。比如: <code>127.0.0.1</code></li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>集群必填</p></div><p><strong>store-bind-port</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>8011</code></li><li>ts-store端的gossip，绑定的端口。比如：<code>8011</code></li></ul><p><strong>meta-bind-port</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>8010</code></li><li>ts-meta端的gossip，绑定的端口。比如：<code>8010</code></li></ul><p><strong>prob-interval</strong></p><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1s</code></li><li>探测周期。</li></ul><p><strong>suspicion-mult</strong></p><ul><li>类型: <code>int</code></li><li>默认值: <code>4</code></li><li>怀疑多个。</li></ul><p><strong>members</strong></p><ul><li><p>类型: <code>[]string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>META的gossip地址。比如：<code>[&quot;127.0.0.1:8010&quot;, &quot;127.0.0.2:8010&quot;, &quot;127.0.0.3:8010&quot;]</code></p></li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>集群必填</p></div><h2 id="spdy" tabindex="-1"><a class="header-anchor" href="#spdy" aria-hidden="true">#</a> [spdy]</h2><p>连接复用专用配置，一般不需要修改</p><h2 id="castor" tabindex="-1"><a class="header-anchor" href="#castor" aria-hidden="true">#</a> [castor]</h2><p>时序数据异常检测专用配置。</p><p>enabled = false<br> pyworker-addr = [&quot;127.0.0.1:6666&quot;]<br> connect-pool-size = 30<br> result-wait-timeout = 10 # unit: second</p><h2 id="castor-detect" tabindex="-1"><a class="header-anchor" href="#castor-detect" aria-hidden="true">#</a> [castor.detect]</h2><p>algorithm= [&#39;BatchDIFFERENTIATEAD&#39;,&#39;DIFFERENTIATEAD&#39;,&#39;IncrementalAD&#39;,&#39;ThresholdAD&#39;,&#39;ValueChangeAD&#39;]</p><p>config_filename = [&#39;detect_base&#39;]</p><h2 id="castor-fit-detect" tabindex="-1"><a class="header-anchor" href="#castor-fit-detect" aria-hidden="true">#</a> [castor.fit_detect]</h2><p>algorithm= [&#39;BatchDIFFERENTIATEAD&#39;,&#39;DIFFERENTIATEAD&#39;,&#39;IncrementalAD&#39;,&#39;ThresholdAD&#39;,&#39;ValueChangeAD&#39;]</p><p>config_filename = [&#39;detect_base&#39;]</p><h2 id="sherlock" tabindex="-1"><a class="header-anchor" href="#sherlock" aria-hidden="true">#</a> [sherlock]</h2><p>sherlock，自动导出pprof文件功能相关配置。<br> sherlock-enable = false<br> collect-interval = &quot;10s&quot;<br> cpu-max-limit = 95<br> dump-path = &quot;/tmp&quot;</p><h2 id="sherlock-cpu" tabindex="-1"><a class="header-anchor" href="#sherlock-cpu" aria-hidden="true">#</a> [sherlock.cpu]</h2><p>enable = false<br> min = 30<br> diff = 25<br> abs = 70<br> cool-down = &quot;10m&quot;</p><h2 id="sherlock-memory" tabindex="-1"><a class="header-anchor" href="#sherlock-memory" aria-hidden="true">#</a> [sherlock.memory]</h2><p>enable = false<br> min = 25<br> diff = 25<br> abs = 80<br> cool-down = &quot;10m&quot;</p><h2 id="sherlock-goroutine" tabindex="-1"><a class="header-anchor" href="#sherlock-goroutine" aria-hidden="true">#</a> [sherlock.goroutine]</h2><p>enable = false<br> min = 10000<br> diff = 20<br> abs = 20000<br> max = 100000<br> cool-down = &quot;30m&quot;</p>`,76);function Q(X,Y){const i=n("Badge"),d=n("ExternalLinkIcon");return s(),r("div",null,[a,u,g,l("p",null,[h,o(),e(i,{text:"必填",type:"danger"})]),m,l("p",null,[b,e(i,{text:"建议",type:"tip"})]),_,l("p",null,[f,o(),e(i,{text:"必填",type:"danger"})]),q,l("p",null,[x,o(),e(i,{text:"必填",type:"danger"})]),y,l("p",null,[k,o(),e(i,{text:"必填",type:"danger"})]),v,l("p",null,[D,o(),e(i,{text:"必填",type:"danger"})]),T,l("p",null,[w,o(),e(i,{text:"必填",type:"danger"})]),S,l("p",null,[A,o(),e(i,{text:"建议",type:"tip"})]),E,z,l("ul",null,[C,H,l("li",null,[o("此路径是常见弱密码的文件路径，"),l("a",I,[o("这里"),e(d)]),o("提供了常用的弱密码，仅供参考。")])]),G,l("p",null,[P,o(),e(i,{text:"建议",type:"tip"})]),B,l("p",null,[L,o(),e(i,{text:"必填",type:"danger"})]),W,l("p",null,[R,o(),e(i,{text:"必填",type:"danger"})]),N,l("p",null,[F,o(),e(i,{text:"必填",type:"danger"})]),M,l("p",null,[V,o(),e(i,{text:"必填",type:"danger"})]),O,l("p",null,[U,o(),e(i,{text:"必填",type:"danger"})]),j])}const $=c(p,[["render",Q],["__file","configurations.html.vue"]]);export{$ as default};
