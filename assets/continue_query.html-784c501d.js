import{_ as s,X as n,Y as a,a3 as e}from"./framework-a5f096d1.js";const p={},o=e(`<h2 id="create-continuous-query" tabindex="-1"><a class="header-anchor" href="#create-continuous-query" aria-hidden="true">#</a> CREATE CONTINUOUS QUERY</h2><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token operator">&lt;</span>cq_name<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span>
<span class="token keyword">BEGIN</span>
  <span class="token operator">&lt;</span>cq_query<span class="token operator">&gt;</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本语法描述" tabindex="-1"><a class="header-anchor" href="#基本语法描述" aria-hidden="true">#</a> 基本语法描述</h3><p><code>cq_name</code>连续查询的名称。</p><p><code>database_name</code>连续查询所在数据库的名称</p><p><code>cq_query</code>连续查询中的查询语句。需要一个函数，一个<code>INTO</code>子句和一个<code>GROUP BY time() </code>子句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">&lt;</span><span class="token keyword">function</span><span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token keyword">INTO</span> <span class="token operator">&lt;</span>destination_measurement<span class="token operator">&gt;</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>measurement<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>stuff<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token keyword">interval</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token operator">&lt;</span>tag_key<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在<code>WHERE</code>子句中，<code>cq_query</code>不需要时间范围。 openGemini在执行CQ时自动生成<code>cq_query</code>的时间范围。<code>cq_query</code>的<code>WHERE</code>子句中的任何用户指定的时间范围将被系统忽略。</p></div><h4 id="运行时间点以及覆盖的时间范围" tabindex="-1"><a class="header-anchor" href="#运行时间点以及覆盖的时间范围" aria-hidden="true">#</a> 运行时间点以及覆盖的时间范围</h4><p>CQ对实时数据进行操作。他们使用本地服务器的时间戳，<code>GROUP BY time()</code>间隔和openGemini的预设时间边界来确定何时执行以及查询中涵盖的时间范围。</p><p>CQs以与<code>cq_query</code>的<code>GROUP BY time()</code>间隔相同的间隔执行，并且它们在openGemini的预设时间边界开始时运行。如果<code>GROUP BY time()</code>间隔为1小时，则CQ每小时开始执行一次。</p><p>当CQ执行时，它对于<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔的时间范围运行单个查询。 如果<code>GROUP BY time()</code>间隔为1小时，当前时间为17:00，查询的时间范围为16:00至16:59999999999。</p><h3 id="基本语法示例" tabindex="-1"><a class="header-anchor" href="#基本语法示例" aria-hidden="true">#</a> 基本语法示例</h3><p>以下示例使用数据库<code>transportation</code>中的示例数据。measurement <code>bus_data</code>数据存储有关公共汽车乘客数量和投诉数量的15分钟数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>name: bus_data
<span class="token comment">--------------</span>
<span class="token keyword">time</span>                   passengers   complaints
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">5</span>            <span class="token number">9</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">8</span>            <span class="token number">9</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">8</span>            <span class="token number">9</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">45</span>:<span class="token number">00</span>Z   <span class="token number">7</span>            <span class="token number">9</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">8</span>            <span class="token number">9</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">15</span>           <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">15</span>           <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">45</span>:<span class="token number">00</span>Z   <span class="token number">17</span>           <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T09:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">20</span>           <span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自动采样数据" tabindex="-1"><a class="header-anchor" href="#自动采样数据" aria-hidden="true">#</a> 自动采样数据</h4><p>使用简单的CQ自动从单个字段中降采样数据，并将结果写入同一数据库中的另一个measurement。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_basic&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">1</span>h<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_basic</code>从<code>bus_data</code>中计算乘客的平均小时数，并将结果存储在数据库<code>transportation</code>中的<code>average_passengers</code>中。</p><p><code>cq_basic</code>以一小时的间隔执行，与<code>GROUP BY time()</code>间隔相同的间隔。 每个小时，<code>cq_basic</code>运行一个单一的查询，覆盖了<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔之间的时间范围，即<code>now()</code>和<code>now()</code>之前的一个小时之间的时间范围。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>点时，cq_basic执行时间范围为<span class="token keyword">time</span> <span class="token operator">&gt;=</span> <span class="token string">&#39;7:00&#39;</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;08：00&#39;</span>的查询。
cq_basic向average_passengers写入一个点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>点时，cq_basic执行时间范围为<span class="token keyword">time</span> <span class="token operator">&gt;=</span> <span class="token string">&#39;8:00&#39;</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;09：00&#39;</span>的查询。
cq_basic向average_passengers写入一个点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自动采样数据到另一个保留策略里" tabindex="-1"><a class="header-anchor" href="#自动采样数据到另一个保留策略里" aria-hidden="true">#</a> 自动采样数据到另一个保留策略里</h4><p>从默认的的保留策略里面采样数据到完全指定的目标measurement中：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_basic_rp&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;transportation&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;three_weeks&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">1</span>h<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_basic_rp</code>从<code>bus_data</code>中计算乘客的平均小时数，并将结果存储在数据库<code>tansportation</code>的RP为<code>three_weeks</code>的measurement<code>average_passengers</code>中。</p><p><code>cq_basic_rp</code>以一小时的间隔执行，与<code>GROUP BY time()</code>间隔相同的间隔。每个小时，<code>cq_basic_rp</code>运行一个单一的查询，覆盖了<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔之间的时间段，即<code>now()</code>和<code>now()</code>之前的一个小时之间的时间范围。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">00</span>cq_basic_rp执行时间范围为<span class="token keyword">time</span> <span class="token operator">&gt;=</span><span class="token string">&#39;7:00&#39;</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:00&#39;</span>的查询。
cq_basic_rp向RP为three_weeks的measurement average_passengers写入一个点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>:<span class="token number">00</span>cq_basic_rp执行时间范围为<span class="token keyword">time</span> <span class="token operator">&gt;=</span><span class="token string">&#39;8:00&#39;</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:00&#39;</span>的查询。
cq_basic_rp向RP为three_weeks的measurementaverage_passengers写入一个点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;transportation&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;three_weeks&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_basic_rp</code>使用CQ和保留策略自动降低样本数据，并将这些采样数据保留在不同的时间长度上。</p><h4 id="自动采样数据并配置cq的时间边界" tabindex="-1"><a class="header-anchor" href="#自动采样数据并配置cq的时间边界" aria-hidden="true">#</a> 自动采样数据并配置CQ的时间边界</h4><p>使用<code>GROUP BY time()</code>子句的偏移间隔来改变CQ的默认执行时间和呈现的时间边界：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_basic_offset&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">1</span>h<span class="token punctuation">,</span><span class="token number">15</span>m<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_basic_offset</code>从<code>bus_data</code>中计算乘客的平均小时数，并将结果存储在<code>average_passengers</code>中。</p><p><code>cq_basic_offset</code>以一小时的间隔执行，与<code>GROUP BY time()</code>间隔相同的间隔。15分钟偏移间隔迫使CQ在默认执行时间后15分钟执行; <code>cq_basic_offset</code>在8:15而不是8:00执行。</p><p>每个小时，<code>cq_basic_offset</code>运行一个单一的查询，覆盖了<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔之间的时间段，即<code>now()</code>和<code>now()</code>之前的一个小时之间的时间范围。 15分钟偏移间隔在CQ的<code>WHERE</code>子句中向前移动生成的预设时间边界; <code>cq_basic_offset</code>在7:15和8：14.999999999而不是7:00和7：59.999999999之间进行查询。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">15</span>cq_basic_offset执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;7:15&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:15&#39;</span>的查询。
cq_basic_offset向average_passengers写入一个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">7.75</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>:<span class="token number">15</span>cq_basic_offset执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;8:15&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:15&#39;</span>的查询。
cq_basic_offset向average_passengers写入一个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">16.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">7.75</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">16.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，时间戳为7:15和8:15而不是7:00和8:00。</p><h3 id="基本语法的常见问题" tabindex="-1"><a class="header-anchor" href="#基本语法的常见问题" aria-hidden="true">#</a> 基本语法的常见问题</h3><h4 id="无数据处理时间间隔" tabindex="-1"><a class="header-anchor" href="#无数据处理时间间隔" aria-hidden="true">#</a> 无数据处理时间间隔</h4><p>如果没有数据落在该时间范围内，则CQ不会在时间间隔内写入任何结果。请注意，基本语法不支持使用<code>fill()</code>更改不含数据的间隔报告的值。如果基本语法包括了<code>fill()</code>，则会忽略<code>fill()</code>。一个解决办法是使用下面的高级语法。</p><h4 id="重新采样以前的时间间隔" tabindex="-1"><a class="header-anchor" href="#重新采样以前的时间间隔" aria-hidden="true">#</a> 重新采样以前的时间间隔</h4><p>基本的CQ运行一个查询，覆盖了<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔之间的时间段。有关如何配置查询的时间范围，请参阅高级语法。</p><h4 id="旧数据的回填结果" tabindex="-1"><a class="header-anchor" href="#旧数据的回填结果" aria-hidden="true">#</a> 旧数据的回填结果</h4><p>CQ对实时数据进行操作，即具有相对于<code>now()</code>发生的时间戳的数据。使用基本的<code>INTO</code>查询来回填具有较旧时间戳的数据的结果。</p><h4 id="cq结果中缺少tag" tabindex="-1"><a class="header-anchor" href="#cq结果中缺少tag" aria-hidden="true">#</a> CQ结果中缺少tag</h4><p>默认情况下，所有<code>INTO</code>查询将源measurement中的任何tag转换为目标measurement中的field。</p><p>在CQ中包含<code>GROUP BY *</code>，以保留目标measurement中的tag。</p><h3 id="高级语法" tabindex="-1"><a class="header-anchor" href="#高级语法" aria-hidden="true">#</a> 高级语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token operator">&lt;</span>cq_name<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span>
RESAMPLE EVERY <span class="token operator">&lt;</span><span class="token keyword">interval</span><span class="token operator">&gt;</span> <span class="token keyword">FOR</span> <span class="token operator">&lt;</span><span class="token keyword">interval</span><span class="token operator">&gt;</span>
<span class="token keyword">BEGIN</span>
  <span class="token operator">&lt;</span>cq_query<span class="token operator">&gt;</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高级语法描述" tabindex="-1"><a class="header-anchor" href="#高级语法描述" aria-hidden="true">#</a> 高级语法描述</h3><p><code>cq_name</code>，<code>database_name</code>和<code>cq_query</code>查看基本语法描述。</p><h4 id="运行时间点以及覆盖的时间范围-1" tabindex="-1"><a class="header-anchor" href="#运行时间点以及覆盖的时间范围-1" aria-hidden="true">#</a> 运行时间点以及覆盖的时间范围</h4><p>CQs对实时数据进行操作。使用高级语法，CQ使用本地服务器的时间戳以及<code>RESAMPLE</code>子句中的信息和openGemini的预设时间边界来确定执行时间和查询中涵盖的时间范围。</p><p>CQs以与<code>RESAMPLE</code>子句中的<code>EVERY</code>间隔相同的间隔执行，并且它们在openGemini的预设时间边界开始时运行。如果<code>EVERY</code>间隔是两个小时，openGemini将在每两小时的开始执行CQ。</p><p>当CQ执行时，它运行一个单一的查询，在<code>now()</code>和<code>now()</code>减去<code>RESAMPLE</code>子句中的<code>FOR</code>间隔之间的时间范围。如果<code>FOR</code>间隔为两个小时，当前时间为17:00，查询的时间间隔为15:00至16:59999999999。</p><p><code>EVERY</code>间隔和<code>FOR</code>间隔都接受时间字符串。<code>RESAMPLE</code>子句适用于同时配置<code>EVERY</code>和<code>FOR</code>,或者是其中之一。如果没有提供<code>EVERY</code>间隔或<code>FOR</code>间隔，则CQ默认为相关为基本语法。</p><h3 id="高级语法示例" tabindex="-1"><a class="header-anchor" href="#高级语法示例" aria-hidden="true">#</a> 高级语法示例</h3><p>示例数据如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>name: bus_data
<span class="token comment">--------------</span>
<span class="token keyword">time</span>                   passengers
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">2</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">45</span>:<span class="token number">00</span>Z   <span class="token number">4</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">8</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">8</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">45</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">8</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">15</span>:<span class="token number">00</span>Z   <span class="token number">15</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">15</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">45</span>:<span class="token number">00</span>Z   <span class="token number">17</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T09:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置执行间隔" tabindex="-1"><a class="header-anchor" href="#配置执行间隔" aria-hidden="true">#</a> 配置执行间隔</h4><p>在<code>RESAMPLE</code>中使用<code>EVERY</code>来指明CQ的执行间隔。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_advanced_every&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
RESAMPLE EVERY <span class="token number">30</span>m
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">1</span>h<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_advanced_every</code>从<code>bus_data</code>中计算<code>passengers</code>的一小时平均值，并将结果存储在数据库<code>transportation</code>中的<code>average_passengers</code>中。</p><p><code>cq_advanced_every</code>以30分钟的间隔执行，间隔与<code>EVERY</code>间隔相同。每30分钟，<code>cq_advanced_every</code>运行一个查询，覆盖当前时间段的时间范围，即与<code>now()</code>交叉的一小时时间段。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">00</span>cq_basic_every执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;7:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:00&#39;</span>的查询。
cq_basic_every向average_passengers写入一个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">30</span>cq_basic_every执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;8:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:00&#39;</span>的查询。
cq_basic_every向average_passengers写入一个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">12.6667</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>:<span class="token number">00</span>cq_basic_every执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;8:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:00&#39;</span>的查询。
cq_basic_every向average_passengers写入一个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，<code>cq_advanced_every</code>计算8:00时间间隔的结果两次。第一次，它运行在8:30，计算每个可用数据点在8:00和9:00（8,15和15）之间的平均值。 第二次，它运行在9:00，计算每个可用数据点在8:00和9:00（8,15,15和17）之间的平均值。由于openGemini处理重复点的方式，TODO：开发验证中。</p><h4 id="配置cq的重采样时间范围" tabindex="-1"><a class="header-anchor" href="#配置cq的重采样时间范围" aria-hidden="true">#</a> 配置CQ的重采样时间范围</h4><p>在<code>RESAMPLE</code>中使用<code>FOR</code>来指明CQ的时间间隔的长度。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_advanced_for&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
RESAMPLE <span class="token keyword">FOR</span> <span class="token number">1</span>h
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">30</span>m<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_advanced_for</code>从<code>bus_data</code>中计算<code>passengers</code>的30分钟平均值，并将结果存储在数据库<code>transportation</code>中的<code>average_passengers</code>中。</p><p><code>cq_advanced_for</code>以30分钟的间隔执行，间隔与<code>GROUP BY time()</code>间隔相同。每30分钟，<code>cq_advanced_for</code>运行一个查询，覆盖时间段为<code>now()</code>和<code>now()</code>减去<code>FOR</code>中的间隔，即是<code>now()</code>和<code>now()</code>之前的一个小时之间的时间范围。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">00</span>cq_advanced_for执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;7:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:00&#39;</span>的查询。
cq_advanced_for向average_passengers写入两个数据点
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">6.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
<span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">30</span>cq_advanced_for执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;7:30&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:30&#39;</span>的查询。
cq_advanced_for向average_passengers写入两个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">11.5</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>:<span class="token number">00</span>cq_advanced_for执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;8:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:00&#39;</span>的查询。
cq_advanced_for向average_passengers写入两个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">11.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，<code>cq_advanced_for</code>会计算每次间隔两次的结果。CQ在8:00和8:30计算7:30的平均值，在8:30和9:00计算8:00的平均值。</p><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">6.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">11.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置执行间隔和cq时间范围" tabindex="-1"><a class="header-anchor" href="#配置执行间隔和cq时间范围" aria-hidden="true">#</a> 配置执行间隔和CQ时间范围</h4><p>在<code>RESAMPLE</code>子句中使用<code>EVERY</code>和<code>FOR</code>来指定CQ的执行间隔和CQ的时间范围长度。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_advanced_every_for&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
RESAMPLE EVERY <span class="token number">1</span>h <span class="token keyword">FOR</span> <span class="token number">90</span>m
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">30</span>m<span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_advanced_every_for</code>从<code>bus_data</code>中计算<code>passengers</code>的30分钟平均值，并将结果存储在数据库<code>transportation</code>中的<code>average_passengers</code>中。</p><p><code>cq_advanced_every_for</code>以1小时的间隔执行，间隔与<code>EVERY</code>间隔相同。每1小时，<code>cq_advanced_every_for</code>运行一个查询，覆盖时间段为<code>now()</code>和<code>now()</code>减去<code>FOR</code>中的间隔，即是<code>now()</code>和<code>now()</code>之前的90分钟之间的时间范围。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">8</span>:<span class="token number">00</span>cq_advanced_every_for执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;=</span><span class="token string">&#39;6:30&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;8:00&#39;</span>的查询。
cq_advanced_every_for向average_passengers写三个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">3</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">6.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
<span class="token operator">&gt;</span>
在<span class="token number">9</span>:<span class="token number">00</span>cq_advanced_every_for执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;7:30&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;9:00&#39;</span>的查询。
cq_advanced_every_for向average_passengers写入三个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">11.5</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，<code>cq_advanced_every_for</code>会计算每次间隔两次的结果。CQ在8:00和9:00计算7:30的平均值。</p><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">3</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">6.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">7.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">11.5</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">30</span>:<span class="token number">00</span>Z   <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置cq的时间范围并填充空值" tabindex="-1"><a class="header-anchor" href="#配置cq的时间范围并填充空值" aria-hidden="true">#</a> 配置CQ的时间范围并填充空值</h4><p>使用<code>FOR</code>间隔和<code>fill()</code>来更改不含数据的时间间隔值。请注意，至少有一个数据点必须在<code>fill()</code>运行的<code>FOR</code>间隔内。 如果没有数据落在<code>FOR</code>间隔内，则CQ不会将任何点写入目标measurement。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> CONTINUOUS QUERY <span class="token string">&quot;cq_advanced_for_fill&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;transportation&quot;</span>
RESAMPLE <span class="token keyword">FOR</span> <span class="token number">2</span>h
<span class="token keyword">BEGIN</span>
  <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span><span class="token string">&quot;passengers&quot;</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token string">&quot;average_passengers&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;bus_data&quot;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">1</span>h<span class="token punctuation">)</span> fill<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq_advanced_for_fill</code>从<code>bus_data</code>中计算<code>passengers</code>的1小时的平均值，并将结果存储在数据库<code>transportation</code>中的<code>average_passengers</code>中。并会在没有结果的时间间隔里写入值<code>1000</code>。</p><p><code>cq_advanced_for_fill</code>以1小时的间隔执行，间隔与<code>GROUP BY time()</code>间隔相同。每1小时，<code>cq_advanced_for_fill</code>运行一个查询，覆盖时间段为<code>now()</code>和<code>now()</code>减去<code>FOR</code>中的间隔，即是<code>now()</code>和<code>now()</code>之前的两小时之间的时间范围。</p><p>下面是2016年8月28日上午的日志输出：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span>
在<span class="token number">6</span>:<span class="token number">00</span>cq_advanced_for_fill执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;=</span><span class="token string">&#39;4:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;6:00&#39;</span>的查询。 cq_advanced_for_fill向average_passengers不写入任何数据点，因为在那个时间范围bus_data没有数据：
<span class="token operator">&gt;</span>
在<span class="token number">7</span>:<span class="token number">00</span>cq_advanced_for_fill执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;=</span><span class="token string">&#39;5:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;7:00&#39;</span>的查询。 cq_advanced_for_fill向average_passengers写入两个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token keyword">time</span>                   mean
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T05:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">1000</span>          <span class="token operator">&lt;</span><span class="token comment">------ fill(1000)</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">3</span>             <span class="token operator">&lt;</span><span class="token comment">------ average of 2 and 4</span>
<span class="token operator">&gt;</span>
<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token operator">&gt;</span>
在<span class="token number">11</span>:<span class="token number">00</span>cq_advanced_for_fill执行时间范围<span class="token keyword">time</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token string">&#39;9:00&#39;</span><span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&lt;</span><span class="token string">&#39;11:00&#39;</span>的查询。 cq_advanced_for_fill向average_passengers写入两个数据点：
<span class="token operator">&gt;</span>
    name: average_passengers
    <span class="token comment">------------------------</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T09:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">20</span>            <span class="token operator">&lt;</span><span class="token comment">------ average of 20</span>
    <span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T10:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">1000</span>          <span class="token operator">&lt;</span><span class="token comment">------ fill(1000)</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<strong>12:00</strong><code>cq_advanced_for_fill</code>执行时间范围<code>time&gt;=&#39;10:00&#39;AND time &lt;&#39;12:00&#39;</code>的查询。 <code>cq_advanced_for_fill</code>向<code>average_passengers</code>不写入任何数据点，因为在那个时间范围<code>bus_data</code>没有数据.</p><p>结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;average_passengers&quot;</span>
name: average_passengers
<span class="token comment">------------------------</span>
<span class="token keyword">time</span>                   mean
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T05:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">1000</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T06:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">3</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T07:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">7</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T08:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">13.75</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T09:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">20</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span>T10:<span class="token number">00</span>:<span class="token number">00</span>Z   <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果前一个值在查询时间之外，则<code>fill(previous)</code>不会在时间间隔里填充数据。</p></div><h3 id="高级语法的常见问题" tabindex="-1"><a class="header-anchor" href="#高级语法的常见问题" aria-hidden="true">#</a> 高级语法的常见问题</h3><h4 id="如果every间隔大于group-by-time-的间隔" tabindex="-1"><a class="header-anchor" href="#如果every间隔大于group-by-time-的间隔" aria-hidden="true">#</a> 如果<code>EVERY</code>间隔大于<code>GROUP BY time()</code>的间隔</h4><p>如果<code>EVERY</code>间隔大于<code>GROUP BY time()</code>间隔，则CQ以与<code>EVERY</code>间隔相同的间隔执行，并运行一个单个查询，该查询涵盖<code>now()</code>和<code>now()</code>减去<code>EVERY</code>间隔之间的时间范围(不是在<code>now()</code>和<code>now()</code>减去<code>GROUP BY time()</code>间隔之间）。</p><p>例如，如果<code>GROUP BY time()</code>间隔为5m，并且<code>EVERY</code>间隔为10m，则CQ每10分钟执行一次。每10分钟，CQ运行一个查询，覆盖<code>now()</code>和<code>now()</code>减去<code>EVERY</code>间隔之间的时间段，即<code>now()</code>到<code>now()</code>之前十分钟之间的时间范围。</p><p>此行为是故意的，并防止CQ在执行时间之间丢失数据。</p><h2 id="drop-continuous-query" tabindex="-1"><a class="header-anchor" href="#drop-continuous-query" aria-hidden="true">#</a> DROP CONTINUOUS QUERY</h2><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><p>从一个指定的database删除CQ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> CONTINUOUS QUERY <span class="token operator">&lt;</span>cq_name<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>DROP CONTINUOUS QUERY</code>返回一个空的结果。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><p>从数据库<code>telegraf</code>中删除<code>idle_hands</code>这个CQ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">DROP</span> CONTINUOUS QUERY <span class="token string">&quot;idle_hands&quot;</span> <span class="token keyword">ON</span> <span class="token string">&quot;telegraf&quot;</span><span class="token punctuation">\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="show-continuous-queries" tabindex="-1"><a class="header-anchor" href="#show-continuous-queries" aria-hidden="true">#</a> SHOW CONTINUOUS QUERIES</h2><h3 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1" aria-hidden="true">#</a> 语法</h3><p>列出openGemini实例上的所有CQ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> CONTINUOUS QUERIES
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>SHOW CONTINUOUS QUERIES</code>按照database分组。</p><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1" aria-hidden="true">#</a> 示例</h3><p>下面展示了<code>test1</code>和<code>test2</code>的CQ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> CONTINUOUS QUERIES
name: test1
<span class="token operator">+</span><span class="token comment">-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token operator">|</span> name  <span class="token operator">|</span> query                                                                                                                                                                                   <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token operator">|</span> cq1_1 <span class="token operator">|</span> <span class="token keyword">CREATE</span> CONTINUOUS QUERY cq1_1 <span class="token keyword">ON</span> test1 RESAMPLE EVERY <span class="token number">1</span>h <span class="token keyword">FOR</span> <span class="token number">90</span>m <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> mean<span class="token punctuation">(</span>passengers<span class="token punctuation">)</span> <span class="token keyword">INTO</span> test1<span class="token punctuation">.</span>autogen<span class="token punctuation">.</span>average_passengers <span class="token keyword">FROM</span> test1<span class="token punctuation">.</span>autogen<span class="token punctuation">.</span>bus_data <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">30</span>m<span class="token punctuation">)</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token number">2</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>

name: test2
<span class="token operator">+</span><span class="token comment">-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token operator">|</span> name  <span class="token operator">|</span> query                                                                                                                                                                              <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token operator">|</span> cq2_1 <span class="token operator">|</span> <span class="token keyword">CREATE</span> CONTINUOUS QUERY cq2_1 <span class="token keyword">ON</span> test2 RESAMPLE EVERY <span class="token number">1</span>h <span class="token keyword">FOR</span> <span class="token number">30</span>m <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">min</span><span class="token punctuation">(</span>passengers<span class="token punctuation">)</span> <span class="token keyword">INTO</span> test2<span class="token punctuation">.</span>autogen<span class="token punctuation">.</span>min_passengers <span class="token keyword">FROM</span> test2<span class="token punctuation">.</span>autogen<span class="token punctuation">.</span>bus_data <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">time</span><span class="token punctuation">(</span><span class="token number">15</span>m<span class="token punctuation">)</span> <span class="token keyword">END</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span>
<span class="token number">2</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,130),t=[o];function c(r,l){return n(),a("div",null,t)}const i=s(p,[["render",c],["__file","continue_query.html.vue"]]);export{i as default};
