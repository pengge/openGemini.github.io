import{_ as s,X as a,Y as n,a3 as p}from"./framework-a5f096d1.js";const t={},e=p(`<p>这一章主要介绍tag数组功能。 <strong>背景</strong> 在合部场景下，为了节省带宽，上传者会将同一台机器的各个组件指标打包上报，这种情况下会将公共字段部分合并上报。如果数据库支持TAG数组功能，将会极大节省这种情况下的带宽。</p><p><strong>功能及优点</strong> openGemini数据库支持数组类型的tag，而且分组、过滤时，数据库自动识别数组tag，并将其拆开，然后按照正常tag处理。 openGemini支持选择tag数组进行查询插入，同时兼容正常查询插入。 支持数组tag会降低存储成本和写入流量。</p><p><strong>写入流程</strong></p><ul><li>实际写入模型</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span><span class="token punctuation">[</span>value3<span class="token punctuation">,</span>value33<span class="token punctuation">,</span>value333<span class="token punctuation">]</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">3</span> <span class="token number">1670491328000000000</span>

<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span><span class="token punctuation">[</span>value2<span class="token punctuation">,</span>value22<span class="token punctuation">,</span>value222<span class="token punctuation">]</span><span class="token punctuation">,</span>tk3<span class="token operator">=</span><span class="token punctuation">[</span>value3<span class="token punctuation">,</span>value33<span class="token punctuation">,</span>value333<span class="token punctuation">]</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">2</span> <span class="token number">1670491329000000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>逻辑写入模型</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value3 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">3</span> <span class="token number">1670491328000000000</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value33 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">3</span> <span class="token number">1670491328000000000</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value333 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">3</span> <span class="token number">1670491328000000000</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value3 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">2</span> <span class="token number">1670491329000000000</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value22<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value33 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">2</span> <span class="token number">1670491329000000000</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value222<span class="token punctuation">,</span>tk3<span class="token operator">=</span>value333 <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">2</span> <span class="token number">1670491329000000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现，数组内有几个成员就会被转换为几条语句，不同数组的长度一致，不同数组内相同位置数据构成一个元组进行写入。</p><p><strong>写入要求</strong></p><ol><li>tagvalue可以不是数组</li><li>存在所有的tagvalue数组长度要保持一致</li><li>serieskey按照数组下标排列</li></ol><p><strong>写入举例</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span>value2<span class="token punctuation">,</span>tk3<span class="token operator">=</span><span class="token punctuation">[</span>value3<span class="token punctuation">,</span>value33<span class="token punctuation">,</span>value333<span class="token punctuation">]</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">3</span>
<span class="token keyword">insert</span> cpu<span class="token punctuation">,</span>tk1<span class="token operator">=</span>value1<span class="token punctuation">,</span>tk2<span class="token operator">=</span><span class="token punctuation">[</span>value2<span class="token punctuation">,</span>value22<span class="token punctuation">,</span>value222<span class="token punctuation">]</span><span class="token punctuation">,</span>tk3<span class="token operator">=</span><span class="token punctuation">[</span>value3<span class="token punctuation">,</span>value33<span class="token punctuation">,</span>value333<span class="token punctuation">]</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function l(c,u){return a(),n("div",null,o)}const r=s(t,[["render",l],["__file","tag_array.html.vue"]]);export{r as default};
