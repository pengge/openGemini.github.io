import{_ as u,X as m,Y as k,Z as s,a1 as n,$ as a,a0 as e,a3 as t,C as l}from"./framework-a5f096d1.js";const v={},b=t(`<h2 id="create-measurement-创建表" tabindex="-1"><a class="header-anchor" href="#create-measurement-创建表" aria-hidden="true">#</a> CREATE MEASUREMENT(创建表)</h2><p>openGemini在写数据时支持自动创建表，但如下三种情况，需要提前创建表</p><h3 id="指定分区键" tabindex="-1"><a class="header-anchor" href="#指定分区键" aria-hidden="true">#</a> 指定分区键</h3><p>openGemini中数据默认按照时间线进行hash分区打散，但某些场景下，业务频繁使用某个或者某几个TAG进行数据检索，采用时间线hash分区的方式让这部分TAG的数据分散到了不同的节点，造成查询扇出度比较大。<br> 如果可以按照这部分频繁使用的TAG对数据进行分区，这样相同TAG值的数据会集中存储在同一个节点之上，从而减少查询扇出度，提升数据检索效率。</p><ul><li><strong>指定一个TAG（如location）对数据进行打散</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> MEASUREMENT mst <span class="token keyword">WITH</span> SHARDKEY location
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>指定多个TAG（如location，region）作为SHARDKEY</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> MEASUREMENT mst <span class="token keyword">WITH</span> SHARDKEY location<span class="token punctuation">,</span> region
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="文本检索" tabindex="-1"><a class="header-anchor" href="#文本检索" aria-hidden="true">#</a> 文本检索</h3><p>文本检索指根据文本内容，如关键字、短语等对文本集合进行检索、过滤等。openGemini支持文本检索，比如对日志进行关键字检索，可返回包含关键字的所有日志数据。<br> 当你在使用该功能时，需要预先创建表，创建表的目的其实是为了指定要在哪些Field字段上创建全文索引，但有个前提，这些Field字段必须是String数据类型。</p><p>创建名为mst的表，并指定在description和error_message两个字段上创建全文索引。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">CREATE</span> MEASUREMENT mst <span class="token keyword">WITH</span> INDEXTYPE <span class="token keyword">text</span> INDEXLIST description<span class="token punctuation">,</span> error_message
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建名为mst的表，并指定在description和error_message两个字段上创建全文索引, 同时设置mst根据location对数据进行分区打散</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">CREATE</span> MEASUREMENT mst <span class="token keyword">WITH</span> INDEXTYPE <span class="token keyword">text</span> INDEXLIST description<span class="token punctuation">,</span> error_message SHARDKEY location
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14),E={class:"hint-container tip"},h=s("p",{class:"hint-container-title"},"提示",-1),g=s("p",null,"仅会在INDEXLIST指定的字段descriptio和error_message创建全文索引，若在其他Field中检索关键字，可能会比较慢",-1),_=s("p",null,"不建议在TAG上创建文本索引，可能出现不可预见的问题",-1),T=s("h3",{id:"使用高基数存储引擎",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用高基数存储引擎","aria-hidden":"true"},"#"),n(" 使用高基数存储引擎")],-1),A=t(`<h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE MEASUREMENT $mst_name ($columnlists)
WITH ENGINETYPE = COLUMNSTORE 
[SHARDKEY $shardkeylist]
[TYPE HASH|RANGE]
[PRIMARYKEY $primarykeylist]
[SORTKEY $sortkeylist]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键字说明如下(上述出现的大写单词均为关键字，使用时不区分大小写) ：</p><ul><li><p><strong>$mst_name</strong>为创建的表名，实际使用时用具体名称替换。不支持包含 <code>,:;/\\</code> 等特殊字符，如需包含其他特殊字符，需要使用双引号包含 mst_name</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> MEASUREMENT <span class="token string">&quot;:mst0&quot;</span> <span class="token punctuation">(</span>tag1 TAG<span class="token punctuation">,</span> field1 INT64 FIELD<span class="token punctuation">,</span> field2 <span class="token keyword">BOOL</span><span class="token punctuation">,</span> field3 STRING<span class="token punctuation">,</span> field4 FLOAT64<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>$columnlists</strong>用于定义 Schema，包含在括号内，需要显式指定，暂不支持对 Schema 进行变更</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(tag1 TAG, field1 INT64 FIELD, field2 BOOL, field3 STRING, field4 FLOAT64)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>columnlists 指定了每一列的列名、数据类型以及列属性，其中</p><ul><li>TAG不需要指定数据类型，默认为 <code>STRING</code></li><li>列属性可选值为 <code>TAG</code> 或者 <code>FIELD</code>，未指定列属性时，默认为 <code>FIELD</code></li><li>数据类型仅支持 <code>FLOAT64</code>, <code>INT64</code>, <code>BOOL</code>, <code>STRING</code></li><li>默认带 <code>time</code> 列，不需要包含在 columnlists 中</li></ul></li><li><p><strong>ENGINETYPE</strong>关键字必须显示指定存储引擎类型为COLUMNSTORE（表示使用高基数引擎）</p></li><li><p><strong>SHARDKEY</strong>关键字指定存储引擎按给定的一个或多个字段进行数据分区打散，默认按全部TAG KEYS进行分区打散</p></li><li><p><strong>TYPE</strong>关键字表示打散方式，分为HASH和RANGE两种。默认为HASH</p></li><li><p><strong>PRIMARYKEY</strong>关键字指定索引列，可以是一个或者多个字段，意味着存储引擎会在这些字段之上创建索引。</p></li><li><p><strong>SORTKEY</strong>指定存储引擎内部的数据排序方式，time表示按时间排序，也可以换为其他的字段。</p></li></ul><p>PRIMARYKEY和SORTKEY二者关系是，**<code>PRIMARYKEY</code> 需为 <code>SORTKEY</code> 的左前缀，否则报错，**如果只配置了其中一个，则二者保持一致。</p><p>举个例子帮助大家更好理解PRIMARYKEY和SORTKEY。假如一个应用需要监控某服务的出入流量，该服务的属性包括REGION、AZ、POD、SERVICE_ID，若要观测某个服务的出入流量，查询条件应该定位到具体云服务<code>REGION=xxx,AZ=xxx,POD=xxx,SERVICE_ID=xxx</code>. 为了加速查询效率，通常需要创建索引。传统倒排索引在高基数场景近似稠密索引，索引开销较大，同时对于数据过滤几乎没有效果。高基数存储引擎放弃传统倒排索引的思路，创建了稀疏索引，前提条件是数据在底层需要是已排好序的。因此，**创建索引需要先给数据排序。**具体做法是把SORTKEY设为REGION，AZ，POD，SERVICE_ID，使得内部数据按REGION、AZ、POD、SERVICE_ID的层级排好序，这时就可以在已排好序的数据的基础上创建PRIMARYKEY指定的数据稀疏索引了。</p><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> testdb
<span class="token operator">&gt;</span> <span class="token keyword">USE</span> testdb
<span class="token operator">&gt;</span> <span class="token keyword">CREATE</span> MEASUREMENT rtt <span class="token punctuation">(</span>deviceIp STRING<span class="token punctuation">,</span> deviceName STRING<span class="token punctuation">,</span> campus STRING<span class="token punctuation">,</span> rtt INT64<span class="token punctuation">)</span> <span class="token keyword">WITH</span> ENGINETYPE <span class="token operator">=</span> COLUMNSTORE SHARDKEY deviceIp PRIMARYKEY deviceIp<span class="token punctuation">,</span>campus SORTKEY deviceIp<span class="token punctuation">,</span>campus<span class="token punctuation">,</span><span class="token keyword">time</span>
<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">FROM</span> rtt
shard_key  <span class="token keyword">type</span> ShardGroup engine_type primary_key       sort_key
<span class="token comment">---------  ---- ---------- ----------- -----------       --------</span>
<span class="token punctuation">[</span>deviceIp<span class="token punctuation">]</span> <span class="token keyword">hash</span> <span class="token number">1</span>          columnstore <span class="token punctuation">[</span>deviceIp campus<span class="token punctuation">]</span> <span class="token punctuation">[</span>deviceIp campus <span class="token keyword">time</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建表名为rtt的数据表，该表使用高基数存储引擎，表结构包含4个字段，分别是deviceIp（string 类型），deviceName（string类型），campus（string类型）和rtt（整型），数据按照deviceIp分区打散，数据按deviceIp，campus，time层级排序，并在deviceIp字段上创建索引。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>openGemini高基数存储引擎具备非常高读写性能，我们欢迎感兴趣的开发者参与进来，一起完善功能。</p></div><h2 id="show-measurements-查看表" tabindex="-1"><a class="header-anchor" href="#show-measurements-查看表" aria-hidden="true">#</a> SHOW MEASUREMENTS(查看表)</h2><p>返回指定数据库的measurement。</p><h3 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1" aria-hidden="true">#</a> 语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> MEASUREMENTS <span class="token punctuation">[</span><span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">WITH</span> MEASUREMENT <span class="token operator">&lt;</span>operator<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;&lt;measurement_name&gt;&#39;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>regular_expression<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>ON &lt;database_name&gt;</code>是可选项。如果查询中没有包含<code>ON &lt;database_name&gt;</code>，您必须在CLI中使用<code>USE &lt;database_name&gt;</code>指定数据库，或者在openGemini API请求中使用参数<code>db</code>指定数据库。</p><p><code>WITH</code>子句，<code>WHERE</code>子句，<code>LIMIT</code>子句和<code>OFFSET</code>子句是可选的。<code>WHERE</code>子句支持tag比较；在<code>SHOW MEASUREMENTS</code>查询中，field比较是无效的。</p><p><code>WHERE</code>子句中支持的操作符：</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td><code>=</code></td><td>等于</td></tr><tr><td><code>&lt;&gt;</code></td><td>不等于</td></tr><tr><td><code>!=</code></td><td>不等于</td></tr><tr><td><code>=~</code></td><td>匹配</td></tr><tr><td><code>!~</code></td><td>不匹配</td></tr></tbody></table>`,18),R=s("code",null,"FROM",-1),S=s("code",null,"LIMIT、OFFSET",-1),N=t(`<h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1" aria-hidden="true">#</a> 示例</h3><ul><li><strong>运行带有<code>ON</code>子句的<code>SHOW MEASUREMENTS</code>查询</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> MEASUREMENTS <span class="token keyword">ON</span> NOAA_water_database
name: measurements
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> name                <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> average_temperature <span class="token operator">|</span>
<span class="token operator">|</span> h2o_feet            <span class="token operator">|</span>
<span class="token operator">|</span> h2o_pH              <span class="token operator">|</span>
<span class="token operator">|</span> h2o_quality         <span class="token operator">|</span>
<span class="token operator">|</span> h2o_temperature     <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token number">1</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该查询返回数据库<code>NOAA_water_database</code>中的measurement。数据库<code>NOAA_water_database</code>有五个measurement：<code>average_temperature</code>、<code>h2o_feet</code>、<code>h2o_pH</code>、<code>h2o_quality</code>和<code>h2o_temperature</code>。</p><ul><li><strong>运行不带有<code>ON</code>子句的<code>SHOW MEASUREMENTS</code>查询</strong></li></ul>`,5),I=s("p",null,[n("使用"),s("code",null,"USE <database_name>"),n("指定数据库：")],-1),M=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token operator"},">"),n(` USE NOAA_water_database
Elapsed: 781ns
`),s("span",{class:"token operator"},">"),n(` SHOW MEASUREMENTS
name: measurements
+---------------------+
`),s("span",{class:"token operator"},"|"),n(" name                "),s("span",{class:"token operator"},"|"),n(`
+---------------------+
`),s("span",{class:"token operator"},"|"),n(" average_temperature "),s("span",{class:"token operator"},"|"),n(`
`),s("span",{class:"token operator"},"|"),n(" h2o_feet            "),s("span",{class:"token operator"},"|"),n(`
`),s("span",{class:"token operator"},"|"),n(" h2o_pH              "),s("span",{class:"token operator"},"|"),n(`
`),s("span",{class:"token operator"},"|"),n(" h2o_quality         "),s("span",{class:"token operator"},"|"),n(`
`),s("span",{class:"token operator"},"|"),n(" h2o_temperature     "),s("span",{class:"token operator"},"|"),n(`
+---------------------+
`),s("span",{class:"token number"},"1"),n(" columns, "),s("span",{class:"token number"},"5"),n(" rows "),s("span",{class:"token keyword"},"in"),n(),s("span",{class:"token builtin class-name"},"set"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),O=s("p",null,[n("使用参数"),s("code",null,"db"),n("指定数据库")],-1),y=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token operator"},">"),n(),s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"-G"),n(),s("span",{class:"token string"},'"http://localhost:8086/query?db=NOAA_water_database&pretty=true"'),n(" --data-urlencode "),s("span",{class:"token string"},'"q=SHOW MEASUREMENTS"'),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token string"},'"results"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
        `),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token string"},'"statement_id"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token number"},"0"),n(`,
            `),s("span",{class:"token string"},'"series"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
                `),s("span",{class:"token punctuation"},"{"),n(`
                    `),s("span",{class:"token string"},'"name"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token string"},'"measurements"'),n(`,
                    `),s("span",{class:"token string"},'"columns"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
                        `),s("span",{class:"token string"},'"name"'),n(`
                    `),s("span",{class:"token punctuation"},"]"),n(`,
                    `),s("span",{class:"token string"},'"values"'),s("span",{class:"token builtin class-name"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
                        `),s("span",{class:"token punctuation"},"["),n(`
                            `),s("span",{class:"token string"},'"average_temperature"'),n(`
                        `),s("span",{class:"token punctuation"},"]"),n(`,
                        `),s("span",{class:"token punctuation"},"["),n(`
                            `),s("span",{class:"token string"},'"h2o_feet"'),n(`
                        `),s("span",{class:"token punctuation"},"]"),n(`,
                        `),s("span",{class:"token punctuation"},"["),n(`
                            `),s("span",{class:"token string"},'"h2o_pH"'),n(`
                        `),s("span",{class:"token punctuation"},"]"),n(`,
                        `),s("span",{class:"token punctuation"},"["),n(`
                            `),s("span",{class:"token string"},'"h2o_quality"'),n(`
                        `),s("span",{class:"token punctuation"},"]"),n(`,
                        `),s("span",{class:"token punctuation"},"["),n(`
                            `),s("span",{class:"token string"},'"h2o_temperature"'),n(`
                        `),s("span",{class:"token punctuation"},"]"),n(`
                    `),s("span",{class:"token punctuation"},"]"),n(`
                `),s("span",{class:"token punctuation"},"}"),n(`
            `),s("span",{class:"token punctuation"},"]"),n(`
        `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"]"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),w=t(`<ul><li><strong>运行带有多个子句的<code>SHOW MEASUREMENTS</code>查询</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> MEASUREMENTS <span class="token keyword">ON</span> NOAA_water_database <span class="token keyword">WITH</span> MEASUREMENT <span class="token operator">=</span><span class="token operator">~</span> <span class="token operator">/</span>h2o<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span>
name: measurements
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token operator">|</span> name            <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token operator">|</span> h2o_feet        <span class="token operator">|</span>
<span class="token operator">|</span> h2o_pH          <span class="token operator">|</span>
<span class="token operator">|</span> h2o_quality     <span class="token operator">|</span>
<span class="token operator">|</span> h2o_temperature <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------+</span>
<span class="token number">1</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该查询返回数据库<code>NOAA_water_database</code>中名字以<code>h2o</code>开头的measurement。</p><ul><li><strong>查看表数量</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> MEASUREMENTS CARDINALITY
TODO

<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> MEASUREMENTS CARDINALITY <span class="token keyword">ON</span> NOAA_water_database
TODO
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="drop-measurement-删除表" tabindex="-1"><a class="header-anchor" href="#drop-measurement-删除表" aria-hidden="true">#</a> DROP MEASUREMENT(删除表)</h2><p>使用<code>DROP MEASUREMENT</code>删除measurement</p><p><code>DROP MEASUREMENT</code>从指定的measurement中删除所有数据和series，并删除measurement。</p><h3 id="语法-2" tabindex="-1"><a class="header-anchor" href="#语法-2" aria-hidden="true">#</a> 语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> MEASUREMENT <span class="token operator">&lt;</span>measurement_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),x=t(`<hr><p>删除名称为<code>h2o_feet</code>的measurement</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">DROP</span> MEASUREMENT <span class="token string">&quot;h2o_feet&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li><code>DROP MEASUREMENT</code>会删除measurement中的所有数据点和series。</li><li>成功执行<code>DROP MEASUREMENT</code>不返回任何结果</li></ol></div><h2 id="alter-measurement-修改表" tabindex="-1"><a class="header-anchor" href="#alter-measurement-修改表" aria-hidden="true">#</a> ALTER MEASUREMENT(修改表)</h2><p>##TODO</p>`,6);function q(f,H){const o=l("RouterLink"),i=l("Tabs"),c=l("font");return m(),k("div",null,[b,s("div",E,[h,g,s("p",null,[n("在字段descriptio和error_message支持精确匹配，短语匹配和模糊匹配三种，相关语法示例参考"),a(o,{to:"/zh/guide/features/logs.html"},{default:e(()=>[n("文本检索")]),_:1})]),_]),T,s("p",null,[n("基于高基数存储引擎的其他读写操作，参考"),a(o,{to:"/zh/guide/features/high_series_cardinality.html"},{default:e(()=>[n("文档")]),_:1})]),A,s("p",null,[n("请查阅DML章节获得关于"),a(o,{to:"/zh/guide/query_data/select.html#select"},{default:e(()=>[R,n("子句")]),_:1}),n("、"),a(o,{to:"/zh/guide/query_data/select.html#limit-offset"},{default:e(()=>[S,n("子句")]),_:1}),n("、和正则表达式的介绍。")]),N,a(i,{id:"245",data:[{title:"CLI"},{title:"API"}]},{tab0:e(({title:r,value:p,isActive:d})=>[I,M]),tab1:e(({title:r,value:p,isActive:d})=>[O,y]),_:1}),w,s("p",null,[s("strong",null,[a(c,{size:"5",color:"green"},{default:e(()=>[n("示例")]),_:1})])]),x])}const D=u(v,[["render",q],["__file","measurement.html.vue"]]);export{D as default};
