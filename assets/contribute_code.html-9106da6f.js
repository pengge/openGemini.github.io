import{_ as l,X as d,Y as u,Z as i,a1 as e,$ as n,a0 as o,a3 as a,C as r}from"./framework-a5f096d1.js";const c={},h=i("h1",{id:"贡献代码",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#贡献代码","aria-hidden":"true"},"#"),e(" 贡献代码")],-1),p={href:"https://docs.github.com/en/github/collaborating-with-pull-requests/producing-changes-to-your-work-with-pull-requests/about",target:"_blank",rel:"noopener noreferrer"},_=i("h2",{id:"贡献之前",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#贡献之前","aria-hidden":"true"},"#"),e(" 贡献之前")],-1),m=i("em",null,"不",-1),g={href:"https://github.com/openGemini/openGemini/issues?q=is%3Aissue+label%3A%22good+first+issue%22",target:"_blank",rel:"noopener noreferrer"},b=i("h2",{id:"贡献过程",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#贡献过程","aria-hidden":"true"},"#"),e(" 贡献过程")],-1),f=i("p",null,"在issue达成共识后，就可以开始代码贡献过程了：",-1),x={href:"http://prow.openGemini.org/command-help?repo=openGemini%2FopenGemini#assign",target:"_blank",rel:"noopener noreferrer"},v={href:"https://guides.github.com/introduction/flow/",target:"_blank",rel:"noopener noreferrer"},G=i("li",null,"确保对拉取请求的持续集成检查为绿色（即成功）。",-1),k={href:"https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request",target:"_blank",rel:"noopener noreferrer"},w=i("li",null,"当您的拉取请求获得足够的批准（默认数量为1）并且满足所有其他要求时，它将被合并。",-1),q=i("p",null,"清晰而友善的沟通是此过程的关键。",-1),N=i("h2",{id:"引用issue",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#引用issue","aria-hidden":"true"},"#"),e(" 引用issue")],-1),I=i("strong",null,"所有",-1),E=i("strong",null,"必须",-1),B=i("code",null,"Issue Number:",-1),L={href:"https://docs.github.com/zh/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue",target:"_blank",rel:"noopener noreferrer"},R=a(`<p>如果拉取请求解决了相关问题，并且您希望 GitHub 在合并到默认分支后自动关闭这些问题，您可以使用如下语法 (<code>KEYWORD #ISSUE-NUMBER</code>)：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Issue Number: close #123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果拉取请求链接了一个问题但没有关闭它，您可以使用关键字<code>ref</code>，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Issue Number: ref #456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个问题应该对每个问题使用完整的语法并用逗号分隔，例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Issue Number: close #123, ref #456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于尝试关闭不同存储库中问题的拉取请求，贡献者需要首先在同一存储库中创建问题并使用此问题进行跟踪。</p><p>如果拉取请求正文未提供所需的内容，机器人将在拉取请求中添加<code>do-not-merge/needs-linked-issue</code>标签以防止其被合并。</p><h2 id="编写测试" tabindex="-1"><a class="header-anchor" href="#编写测试" aria-hidden="true">#</a> 编写测试</h2>`,9),V=a('<p>如果您的拉取请求仅包含测试用例以增加 openGemini 的测试覆盖率，我们也会非常感激。 为现有模块补充测试用例是熟悉现有代码的一种很好且简单的方法。</p><h2 id="创建良好的拉取请求" tabindex="-1"><a class="header-anchor" href="#创建良好的拉取请求" aria-hidden="true">#</a> 创建良好的拉取请求</h2><p>创建拉取请求以供提交时，您应该考虑以下几点以帮助确保您的拉取请求被接受：</p><ul><li>该贡献是否会改变功能或组件的行为，从而可能破坏以前用户的程序和设置？ 如果是，则需要进行讨论并同意这种改变是可取的。</li><li>该贡献在概念上是否适合 openGemini？ 它是否属于特殊情况，导致常见情况变得更加复杂，或者使抽象/API 变得臃肿？</li><li>该贡献对 openGemini 的构建时间有很大影响吗？</li><li>您的贡献是否会影响任何文档？ 如果是，您应该添加/更改适当的文档。</li><li>如果有任何新的依赖项，它们是否正在积极维护？ 他们的许可证是什么？</li></ul><h2 id="编写良好的commits" tabindex="-1"><a class="header-anchor" href="#编写良好的commits" aria-hidden="true">#</a> 编写良好的commits</h2><p>每个功能或错误修复都应该通过单个拉取请求来解决，并且对于每个拉取请求可能有多个提交。 尤其：</p><ul><li><em>不要</em>在同一次提交中修复多个问题（当然，除非一项代码更改修复了所有问题）。</li><li><em>不要</em>在与某些<strong>功能/错误修复</strong>相同的提交中对不相关的代码进行外观更改。</li></ul><h2 id="等待审核" tabindex="-1"><a class="header-anchor" href="#等待审核" aria-hidden="true">#</a> 等待审核</h2><p>首先，请耐心等待！ 提交拉取请求的人比能够审查您的拉取请求的人多得多。 审核您的拉取请求需要审核者有空闲时间和动力来查看您的拉取请求。 如果您的拉取请求在一段时间内没有收到审阅者的任何通知（即没有发表评论），您可以 ping reviewers 和 assignees 以获得更多关注。</p><p>当有人确实抽出时间查看您的拉取请求时，他们很可能会就如何改进它发表评论（不用担心，即使提交者/维护者也会将其拉取请求发送回给他们进行更改）。 然后，预计您会更新拉取请求以解决这些评论，并且审查过程将不断迭代，直到出现令人满意的解决方案。</p>',10);function z(A,C){const t=r("ExternalLinkIcon"),s=r("RouterLink");return d(),u("div",null,[h,i("p",null,[e("openGemini 通过代码贡献来维护、改进和扩展。 我们欢迎向 openGemini 贡献代码。 openGemini 是基于"),i("a",p,[e("pull requests"),n(t)]),e(" 来运作的。")]),_,i("p",null,[e("为 openGemini 做出贡献并"),m,e("从创建pull request开始。 我们希望贡献者首先与我们联系，共同讨论总体方法。 如果没有与 openGemini 提交者达成共识，贡献可能需要大量返工或不会被审查。 因此，请"),n(s,{to:"/zh/dev-guide/contribute/report_issue.html"},{default:o(()=>[e("创建 GitHub 问题")]),_:1}),e("，在现有问题下进行讨论并到达共识。")]),i("p",null,[e("对于新人，您可以查看"),i("a",g,[e("starter issues"),n(t)]),e("，这些问题标有“good first issues”标签。 这些问题适合新贡献者处理，并且不需要很长时间就能解决。 但由于该标签通常是在分类时添加的，因此可能会变得不准确，因此，如果您认为该分类不再适用，请随时发表评论。")]),b,f,i("ol",null,[i("li",null,[e("通过 "),i("a",x,[e("/assign"),n(t)]),e(" 将issue分配给自己。 这可以让其他贡献者知道您正在解决该issue，这样他们就不会重复工作。")]),i("li",null,[e("按照 "),i("a",v,[e("GitHub 工作流程"),n(t)]),e("，在您自己的 git 存储库分支中提交代码更改，并打开pull requst以进行代码审查。")]),G,i("li",null,[e("审核并处理 "),i("a",k,[e("对你的拉取请求的评论"),n(t)]),e("。")]),w]),q,N,i("p",null,[e("openGemini 社区中的代码存储库需要"),I,e("拉取请求引用其相应的问题。在拉取请求正文中，"),E,e("有一行以"),B,e("开头，并通过"),i("a",L,[e("关键字"),n(t)]),e("链接相应的问题，例如：")]),R,i("p",null,[e("当您向 openGemini 贡献代码时，一件重要的事情就是测试。 测试应始终被视为变更的一部分。 任何导致 openGemini 语义改变或新功能添加的代码更改都应该有相应的测试用例。 当然，如果任何现有测试用例仍然有效，您就不能破坏它们。 建议首先在本地环境上"),n(s,{to:"/zh/dev-guide/get_started/test_tutorials.html"},{default:o(()=>[e("运行测试")]),_:1}),e("，以发现明显的问题并在打开拉取请求之前修复它们。")]),V])}const S=l(c,[["render",z],["__file","contribute_code.html.vue"]]);export{S as default};
