import{_ as e,X as t,Y as o,Z as s,a1 as a,$ as p,a0 as c,a3 as r,C as l}from"./framework-a5f096d1.js";const i={},d={class:"hint-container tip"},k=s("p",{class:"hint-container-title"},"提示",-1),u=r(`<h2 id="精确匹配-match" tabindex="-1"><a class="header-anchor" href="#精确匹配-match" aria-hidden="true">#</a> 精确匹配 (MATCH)</h2><p>精确匹配是指只有整个单词与关键字相同才匹配。比如在日志检索中，根据特定错误码检索所有相关的日志信息。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> server_name，message <span class="token keyword">FROM</span> mst <span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">&quot;504&quot;</span><span class="token punctuation">)</span> <span class="token operator">AND</span> server_name<span class="token operator">=</span><span class="token string">&quot;server0&quot;</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&gt;</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询过去一天内，server0服务的全部504日志</p><h2 id="短语匹配-matchphrase" tabindex="-1"><a class="header-anchor" href="#短语匹配-matchphrase" aria-hidden="true">#</a> 短语匹配 (MATCHPHRASE)</h2><p>同MATCH查询一样，短语匹配是标准全文检索中的一种最常用查询方式，MATCH 和 MATCHPHRASE都是精确匹配，不同的是，MATCHPHRASE是按短语查询，而MATCH是单个单词。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token keyword">FROM</span> mst <span class="token keyword">WHERE</span> MATCHPHRASE<span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">&#39;GET images backnews.gif&#39;</span><span class="token punctuation">)</span> <span class="token operator">AND</span> <span class="token keyword">time</span> <span class="token operator">&gt;</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>统计过去1小时内包含&#39;GET images backnews.gif&#39;内容的日志总数</p><h2 id="模糊匹配-like" tabindex="-1"><a class="header-anchor" href="#模糊匹配-like" aria-hidden="true">#</a> 模糊匹配 (LIKE)</h2><p>模糊匹配是另一种常见的全文检索查询方式，可以返回带有某个前缀或者后缀的一类字符串，比如在业务日志中，某些错误都有固定的前缀，但是错误码是不一样的，但都表示某一类错误信息，这时你会想到使用模糊匹配</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> mst <span class="token keyword">WHERE</span> message <span class="token operator">LIKE</span> <span class="token string">&#39;NET%&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询包含NET开头关键字的全部日志数据</p>`,12);function m(h,g){const n=l("RouterLink");return t(),o("div",null,[s("div",d,[k,s("p",null,[a("创建表参考"),p(n,{to:"/zh/guide/schema/measurement.html"},{default:c(()=>[a("表操作")]),_:1})])]),u])}const E=e(i,[["render",m],["__file","logs.html.vue"]]);export{E as default};
