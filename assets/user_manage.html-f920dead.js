import{_ as i,X as l,Y as c,Z as a,a1 as s,$ as n,a0 as e,a3 as t,C as p}from"./framework-a5f096d1.js";const d={},u=t(`<p>This chapter mainly introduces how to create users, delete users, authorize, etc. in openGemini.</p><p>openemini does not have a built-in account. you need to actively create a unique administrator account for the system. The accounts of openGemini are divided into administrator accounts and ordinary user accounts, and the corresponding roles are admin and user respectively. Administrator can only be created once in the system, cannot be deleted, and cannot be renamed. Administrator can create more ordinary user accounts, and must be authorized to access the database.</p><p>The permissions of ordinary users are associated with the DB. The permissions are divided into three types: READ, WRITE, and ALL, which represent readable, writable, and readable and writable respectively. If an ordinary user is granted the READ permission on the DB, the ordinary user can only query in the DB.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Create an administrator account first, then enable https and identity authentication</p></div><h2 id="create-an-administrator-account" tabindex="-1"><a class="header-anchor" href="#create-an-administrator-account" aria-hidden="true">#</a> Create an administrator account</h2><p>Start openGemini stand-alone or cluster without enable https and auth.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> curl <span class="token operator">-</span>i <span class="token operator">-</span>XPOST <span class="token string">&quot;http://ip:8086/query&quot;</span> <span class="token comment">--data-urlencode &quot;q=CREATE USER admin WITH PASSWORD &#39;admin-passwd&#39; WITH ALL PRIVILEGES&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>| creates an administrator account named &quot;admin&quot;</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><ol><li><p>You need to replace the IP address and port in the command with the ip and port of ts-sql, and set the administrator account name and password.</p></li><li><p>The password must be composed of uppercase and lowercase letters, numbers, and special characters, and the length is limited to 8-256 characters.</p></li><li><p>config/weakpasswd.properties is a weak password configuration file, which supports weak password verification by default. If the password is exist in the configuration file, it will be regarded as a weak password and is not allowed to be used.</p></li><li><p>The password must be in single quotes.</p></li><li><p>It is <strong>not recommended</strong> to use single quote (&#39;) and backslash () characters in passwords, for passwords containing these characters, use &#39;&#39; to escape special characters when creating users and submitting authentication requests.</p></li></ol></div><p>You can also use ts-cli and create administrator.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ts-cli <span class="token parameter variable">-host</span> xxx <span class="token parameter variable">-port</span> xxx
openGemini CLI <span class="token number">0.1</span>.0 <span class="token punctuation">(</span>rev-revision<span class="token punctuation">)</span>
Please use <span class="token variable"><span class="token variable">\`</span>quit<span class="token variable">\`</span></span>, <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">exit</span><span class="token variable">\`</span></span> or <span class="token variable"><span class="token variable">\`</span>Ctrl-D<span class="token variable">\`</span></span> to <span class="token builtin class-name">exit</span> this program.
<span class="token operator">&gt;</span> CREATE <span class="token environment constant">USER</span> admin WITH PASSWORD <span class="token string">&#39;nJa@w7f@12&#39;</span> WITH ALL PRIVILEGES
<span class="token operator">&gt;</span> SHOW USERS
+-------+-------+
<span class="token operator">|</span> user  <span class="token operator">|</span> admin <span class="token operator">|</span> 
+-------+-------+
<span class="token operator">|</span> admin <span class="token operator">|</span> <span class="token boolean">true</span>  <span class="token operator">|</span>
+-------+-------+
<span class="token number">2</span> columns, <span class="token number">1</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>For security reasons, the administrator account of openGemini can only be created once in the system, cannot be deleted, and cannot be renamed. Before creating an administrator account, please carefully save the user name and password.</p></div><h2 id="enable-authentication-and-https" tabindex="-1"><a class="header-anchor" href="#enable-authentication-and-https" aria-hidden="true">#</a> Enable authentication and HTTPS</h2>`,13),k=t(`<ol><li>If you use an openGemini cluster, modify the configuration file &#39; openGemini.conf &#39;</li></ol><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">http</span><span class="token punctuation">]</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 <span class="token key property">auth-enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
 <span class="token key property">https-enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
 <span class="token key property">https-certificate</span> <span class="token punctuation">=</span> <span class="token string">&quot;path/to/certificate.crt&quot;</span>
 <span class="token key property">https-private-key</span> <span class="token punctuation">=</span> <span class="token string">&quot;path/to/certificate.key&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={start:"2"},v=a("strong",null,"add",-1),h=t(`<div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">http</span><span class="token punctuation">]</span>
 <span class="token key property">auth-enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
 <span class="token key property">https-enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
 <span class="token key property">https-certificate</span> <span class="token punctuation">=</span> <span class="token string">&quot;path/to/certificate.crt&quot;</span>
 <span class="token key property">https-private-key</span> <span class="token punctuation">=</span> <span class="token string">&quot;path/to/certificate.key&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you combine the crt file and key file into a pem file, you can only configure the https-certificate option.</p>`,2),b=a("strong",null,"relate entries",-1),g={start:"3"},y=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>~$ ts-cli <span class="token parameter variable">-host</span> xx <span class="token parameter variable">-port</span> xx <span class="token parameter variable">-ssl</span> <span class="token parameter variable">-unsafeSsl</span>
openGemini CLI <span class="token number">0.1</span>.0 <span class="token punctuation">(</span>rev-revision<span class="token punctuation">)</span>
Please use <span class="token variable"><span class="token variable">\`</span>quit<span class="token variable">\`</span></span>, <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">exit</span><span class="token variable">\`</span></span> or <span class="token variable"><span class="token variable">\`</span>Ctrl-D<span class="token variable">\`</span></span> to <span class="token builtin class-name">exit</span> this program.
<span class="token operator">&gt;</span> show databases
ERR: unable to parse authentication credentials
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The error message &quot;ERR: unable to parse authentication credentials&quot; indicates that https and identity authentication have taken effect</p><h2 id="connect-to-opengemini" tabindex="-1"><a class="header-anchor" href="#connect-to-opengemini" aria-hidden="true">#</a> Connect to openGemini</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">~</span>$ ts<span class="token operator">-</span>cli <span class="token operator">-</span>host xx <span class="token operator">-</span>port xx <span class="token operator">-</span>ssl <span class="token operator">-</span>unsafeSsl
openGemini CLI <span class="token number">0.1</span><span class="token number">.0</span> <span class="token punctuation">(</span>rev<span class="token operator">-</span>revision<span class="token punctuation">)</span>
Please <span class="token keyword">use</span> <span class="token identifier"><span class="token punctuation">\`</span>quit<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>exit<span class="token punctuation">\`</span></span> <span class="token operator">or</span> <span class="token identifier"><span class="token punctuation">\`</span>Ctrl-D<span class="token punctuation">\`</span></span> <span class="token keyword">to</span> <span class="token keyword">exit</span> this program<span class="token punctuation">.</span>
<span class="token operator">&gt;</span> auth
username: admin  
password: 
<span class="token operator">&gt;</span> <span class="token keyword">show</span> <span class="token keyword">databases</span>
name: <span class="token keyword">databases</span>
<span class="token operator">+</span><span class="token comment">------+</span>
<span class="token operator">|</span> name <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------+</span>

<span class="token number">1</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the above command is executed correctly, it means that the user has taken effect, and then you can use the administrator to create a ordinary user or execute other commands.</p><h2 id="create-ordinary-user" tabindex="-1"><a class="header-anchor" href="#create-ordinary-user" aria-hidden="true">#</a> Create ordinary user</h2><p>use the administrator to create ordinary users</p><p><strong>Create a ordinary user &#39;user0&#39; without any permissions</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> auth
username: admin  
password: 
<span class="token operator">&gt;</span> <span class="token keyword">CREATE</span> <span class="token keyword">USER</span> user0 <span class="token keyword">WITH</span> PASSWORD <span class="token string">&#39;your_pwd&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="show-users" tabindex="-1"><a class="header-anchor" href="#show-users" aria-hidden="true">#</a> SHOW USERS</h2><p>View all existing users</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> USERS
<span class="token operator">+</span><span class="token comment">-------+-------+</span>
<span class="token operator">|</span> <span class="token keyword">user</span>  <span class="token operator">|</span> admin <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+</span>
<span class="token operator">|</span> admin <span class="token operator">|</span> <span class="token boolean">true</span>  <span class="token operator">|</span>
<span class="token operator">|</span> user0 <span class="token operator">|</span> <span class="token boolean">false</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+</span>
<span class="token number">2</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="drop-user" tabindex="-1"><a class="header-anchor" href="#drop-user" aria-hidden="true">#</a> DROP USER</h2><p>delete exist users</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> <span class="token string">&quot;user0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="grant" tabindex="-1"><a class="header-anchor" href="#grant" aria-hidden="true">#</a> GRANT</h2><p>Grant user <code>READ</code>, <code>WRITE</code> or <code>ALL</code> permission on DB</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token punctuation">[</span><span class="token keyword">READ</span><span class="token punctuation">,</span><span class="token keyword">WRITE</span><span class="token punctuation">,</span><span class="token keyword">ALL</span><span class="token punctuation">]</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h3><p>Grant <code>user0</code> read access to <code>NOAA_water_database</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">READ</span> <span class="token keyword">ON</span> <span class="token string">&quot;NOAA_water_database&quot;</span> <span class="token keyword">TO</span> <span class="token string">&quot;user0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Grant <code>user0</code> to have all permissions on <code>NOAA_water_database</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> <span class="token string">&quot;NOAA_water_database&quot;</span> <span class="token keyword">TO</span> <span class="token string">&quot;user0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="show-grants" tabindex="-1"><a class="header-anchor" href="#show-grants" aria-hidden="true">#</a> SHOW GRANTS</h2><p>View specified user permissions</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token string">&quot;user0&quot;</span>
<span class="token operator">+</span><span class="token comment">----------------------+-----------+</span>
<span class="token operator">|</span> <span class="token keyword">database</span>             <span class="token operator">|</span> privilege <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+-----------+</span>
<span class="token operator">|</span> NOAA_water_database  <span class="token operator">|</span> <span class="token keyword">READ</span>      <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+-----------+</span>
<span class="token number">2</span> <span class="token keyword">columns</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="revoke" tabindex="-1"><a class="header-anchor" href="#revoke" aria-hidden="true">#</a> REVOKE</h2><p>Revoke user permissions</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">REVOKE</span> <span class="token punctuation">[</span><span class="token keyword">READ</span><span class="token punctuation">,</span><span class="token keyword">WRITE</span><span class="token punctuation">,</span><span class="token keyword">ALL</span><span class="token punctuation">]</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples-3" tabindex="-1"><a class="header-anchor" href="#examples-3" aria-hidden="true">#</a> Examples</h3><p>Revoke the write permission of <code>user0</code> to <code>NOAA_water_database</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">REVOKE</span> <span class="token keyword">WRITE</span> <span class="token keyword">ON</span> <span class="token string">&quot;NOAA_water_database&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;user0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Revoke the all permission of <code>user0</code> to <code>NOAA_water_database</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">REVOKE</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> <span class="token string">&quot;NOAA_water_database&quot;</span> <span class="token keyword">FROM</span> <span class="token string">&quot;user0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="set-password" tabindex="-1"><a class="header-anchor" href="#set-password" aria-hidden="true">#</a> SET PASSWORD</h2><p>reset Password</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;&lt;password&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="examples-4" tabindex="-1"><a class="header-anchor" href="#examples-4" aria-hidden="true">#</a> Examples</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> <span class="token string">&quot;user0&quot;</span> <span class="token operator">=</span> <span class="token string">&#39;your_pwd&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,43);function w(q,f){const o=p("RouterLink"),r=p("font");return l(),c("div",null,[u,a("p",null,[s("Please refer to "),n(o,{to:"/guide/security_user/authentication_and_authorization.html"},{default:e(()=>[s("Authentication and Authorization")]),_:1}),s(" and "),n(o,{to:"/guide/security_user/https.html"},{default:e(()=>[s("Enable HTTPS")]),_:1})]),k,a("ol",m,[a("li",null,[s("If you use an single openGemini, modify the configuration file ' openGemini.singlenode.conf ', "),n(r,{color:"red"},{default:e(()=>[v]),_:1}),s(" the following content under [http] section.")])]),h,a("p",null,[b,s(),n(o,{to:"/guide/security_user/https.html#generate-certificate-and-key"},{default:e(()=>[s("generate a self-signed certificate and key")]),_:1})]),a("ol",g,[a("li",null,[a("strong",null,[n(r,{color:"red"},{default:e(()=>[s("Restart openGemini")]),_:1})])])]),y])}const _=i(d,[["render",w],["__file","user_manage.html.vue"]]);export{_ as default};
