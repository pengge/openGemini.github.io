import{_ as a,X as h,Y as s,Z as t,a1 as d,$ as r,a0 as i,a3 as n,C as l}from"./framework-a5f096d1.js";const u={},c=t("p",null,"openGemini作为一款开源的时序数据库系统，社区蓬勃发展是广大开发者共同的心愿。性能作为数据库最为关键指标之一，很大程度上决定了社区未来能走多远。另一方面，数据库已经成为了企业信息化建设的重要组成部分，而数据库的性能则是企业信息化建设的关键因素之一。数据库性能的好坏直接影响到企业的业务流程和效率，因此，对于数据库的性能优化是非常重要的。正是如此，社区一直以来都将性能优化工作作为社区长期工作来抓。",-1),p=t("h2",{id:"测试场景",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#测试场景","aria-hidden":"true"},"#"),d(" 测试场景")],-1),b=t("thead",null,[t("tr",null,[t("th",null,"项目"),t("th",null,"说明")])],-1),g=t("td",null,[t("strong",null,"压测工具")],-1),_={href:"https://github.com/timescale/tsbs",target:"_blank",rel:"noopener noreferrer"},m=t("tr",null,[t("td",null,[t("strong",null,"测试模型")]),t("td",null,"devops")],-1),y=t("tr",null,[t("td",null,[t("strong",null,"数据模型")]),t("td",null,"1DB 1个表 10tag 10field")],-1),f=t("tr",null,[t("td",null,[t("strong",null,"数据量")]),t("td",null,"30万时间线；25.92亿points，原始数据大小(gzip压缩) 88G")],-1),x=t("td",null,[t("strong",null,"节点数")],-1),S=t("tr",null,[t("td",null,[t("strong",null,"机器规格")]),t("td",null,"32U128G")],-1),O=n('<h2 id="写性能" tabindex="-1"><a class="header-anchor" href="#写性能" aria-hidden="true">#</a> 写性能</h2><table><thead><tr><th>数据库</th><th>并发数</th><th>30万时间线（rows/sec）</th><th>磁盘大小</th></tr></thead><tbody><tr><td>openGemini v1.1.0-rc1</td><td>32</td><td>392,915.45</td><td>15GB</td></tr><tr><td>InfluxDB 2.x OSS</td><td>32</td><td>87,196.63</td><td>14GB</td></tr><tr><td>国内其他 OSS</td><td>32</td><td>361,871.25</td><td>20GB</td></tr></tbody></table><blockquote><p>1 row = 10tag + 10field, 这里1个field类似于一个设备上的点位，换算为metrics，1 row = 10 metrics</p></blockquote><h2 id="纵向对比" tabindex="-1"><a class="header-anchor" href="#纵向对比" aria-hidden="true">#</a> 纵向对比</h2><table><thead><tr><th>场景</th><th>并发数</th><th>v1.1.0-rc1(平均时延ms)</th><th>v1.0.1-(平均时延ms)</th></tr></thead><tbody><tr><td>single-groupby-1-1-12</td><td>32</td><td>7.17</td><td>17.07</td></tr><tr><td>single-groupby-1-1-1</td><td>32</td><td>3.12</td><td>6.67</td></tr><tr><td>single-groupby-1-8-1</td><td>32</td><td>7.3</td><td>13.35</td></tr><tr><td>single-groupby-5-1-12</td><td>32</td><td>13.35</td><td>36.37</td></tr><tr><td>single-groupby-5-1-1</td><td>32</td><td>4.55</td><td>12.41</td></tr><tr><td>single-groupby-5-8-1</td><td>32</td><td>10.1</td><td>23.01</td></tr><tr><td>cpu-max-all-1</td><td>32</td><td>6.89</td><td>19.54</td></tr><tr><td>cpu-max-all-8</td><td>32</td><td>16.88</td><td>40.01</td></tr><tr><td>double-groupby-1</td><td>8</td><td>24,719</td><td>30,408.05</td></tr><tr><td>double-groupby-5</td><td>8</td><td>51,478.43</td><td>67,023.02</td></tr><tr><td>double-groupby-all</td><td>8</td><td>77,594.52</td><td>85,673.76</td></tr><tr><td>lastpoint</td><td>8</td><td>54,672.35</td><td>64,107.8</td></tr><tr><td>groupby-orderby-limit</td><td>2</td><td>9,225.74</td><td>116,212.15</td></tr><tr><td>high-cpu-1</td><td>32</td><td>19.99</td><td>37.65</td></tr><tr><td>high-cpu-all</td><td>1</td><td>35,201.1</td><td>109,319.78</td></tr></tbody></table>',5),B={href:"http://opengemini.org/116.html",target:"_blank",rel:"noopener noreferrer"},k=n('<h2 id="横向对比" tabindex="-1"><a class="header-anchor" href="#横向对比" aria-hidden="true">#</a> 横向对比</h2><table><thead><tr><th>场景</th><th>并发</th><th>openGemini v1.1.0-rc1</th><th>InfluxDB 2.x OSS</th><th>国内其他 OSS</th></tr></thead><tbody><tr><td>single-groupby-1-1-12</td><td>32</td><td>7.17</td><td>24.89</td><td>14.18</td></tr><tr><td>single-groupby-1-1-1</td><td>32</td><td>3.12</td><td>4.28</td><td>10.72</td></tr><tr><td>single-groupby-1-8-1</td><td>32</td><td>7.3</td><td>12.17</td><td>80.05</td></tr><tr><td>single-groupby-5-1-12</td><td>32</td><td>13.35</td><td>101.63</td><td>19.75</td></tr><tr><td>single-groupby-5-1-1</td><td>32</td><td>4.55</td><td>12.04</td><td>13.67</td></tr><tr><td>single-groupby-5-8-1</td><td>32</td><td>10.1</td><td>48.6</td><td>109.96</td></tr><tr><td>cpu-max-all-1</td><td>32</td><td>6.89</td><td>13.86</td><td>17.84</td></tr><tr><td>cpu-max-all-8</td><td>32</td><td>16.88</td><td>91.8</td><td>213.23</td></tr><tr><td>double-groupby-1</td><td>8</td><td>24,719</td><td>243,356.06</td><td>141,016.09</td></tr><tr><td>double-groupby-5</td><td>8</td><td>51,478.43</td><td>122,317.54</td><td>205,317.78</td></tr><tr><td>double-groupby-all</td><td>8</td><td>77,594.52</td><td>OOM</td><td>&gt;5min</td></tr><tr><td>lastpoint</td><td>8</td><td>54,672.35</td><td>OOM</td><td>826,563.36</td></tr><tr><td>groupby-orderby-limit</td><td>2</td><td>9,225.74</td><td>OOM</td><td>503,419.97</td></tr><tr><td>high-cpu-1</td><td>32</td><td>19.99</td><td>23.41</td><td>19.78</td></tr><tr><td>high-cpu-all</td><td>1</td><td>35,201.1</td><td>OOM</td><td>查询失败</td></tr></tbody></table><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li>相比v1.0.1版本，简单查询场景（single-*，cpu-*）提升2x-3x。复杂查询场景（double-*, last-*, high-cpu-all）提升20%-30%，即10秒左右，虽然提升幅度看似不大，但对于应用来说，这个结果是一个非常可观的性能提升。</li><li>相比其他时序数据库，openGemini具有明显性能优势。</li></ul>',4);function v(G,w){const e=l("ExternalLinkIcon"),o=l("font");return h(),s("div",null,[c,p,t("table",null,[b,t("tbody",null,[t("tr",null,[g,t("td",null,[d("TSBS ("),t("a",_,[d("https://github.com/timescale/tsbs"),r(e)]),d(")")])]),m,y,f,t("tr",null,[x,t("td",null,[r(o,{color:"red"},{default:i(()=>[d("单机（非集群）")]),_:1})])]),S])]),O,t("blockquote",null,[t("p",null,[d("场景说明，比如single-groupby-1-1-12 代表什么意思，见"),t("a",B,[d("TSBS 基准测试场景介绍"),r(e)]),d("。")])]),k])}const M=a(u,[["render",v],["__file","performance.html.vue"]]);export{M as default};
