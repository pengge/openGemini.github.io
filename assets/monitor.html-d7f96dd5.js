import{_ as o}from"./dashboard-bcb3703c.js";import{_ as l,X as p,Y as c,Z as s,a1 as n,$ as e,a0 as t,a3 as i,C as r}from"./framework-a5f096d1.js";const u="/assets/dbsource-60c668ee.png",d={},m=i(`<p>openGemini提供了260+监控指标，来监控集群的各种状态，下面将介绍如何开启监控项，并结合Grafana可视化监控数据。 这里使用scripts文件下的install_cluster.sh和install_monitor.sh脚本文件在单机上模拟集群部署进行演示。</p><h2 id="内核配置文件" tabindex="-1"><a class="header-anchor" href="#内核配置文件" aria-hidden="true">#</a> 内核配置文件</h2><p>ts-sql/ts-store/ts-meta, 开启监控的配置如下：</p><div class="language-editorconfig line-numbers-mode" data-ext="editorconfig"><pre class="language-editorconfig"><code><span class="token section selector"><span class="token punctuation">[</span>monitor<span class="token punctuation">]</span></span>
   <span class="token key attr-name">pushers</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;http&quot;</span>
   <span class="token key attr-name">store-enabled</span> <span class="token value attr-value"><span class="token punctuation">=</span> true</span>
   <span class="token key attr-name">store-database</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;_internal&quot;</span>
   <span class="token key attr-name">store-interval</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;10s&quot;</span>
   <span class="token comment"># store-path = &quot;/tmp/openGemini/metric/{{id}}/metric.data&quot;</span>
   <span class="token comment"># compress = false</span>
   <span class="token key attr-name">http-endpoint</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;127.0.0.1:8086&quot;</span>
   <span class="token comment"># username = &quot;&quot;</span>
   <span class="token comment"># password = &quot;&quot;</span>

<span class="token section selector"><span class="token punctuation">[</span>http<span class="token punctuation">]</span></span>
  <span class="token key attr-name">bind-address</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{addr}}:8086&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>pushers，表示监控指标的推送方式，目前支持http和file两种方式，可以使用<code>http|file</code>表示两种方式都使用</li><li>store-enable，表示是否开启monitor数据存储</li><li>store-database，表示监控指标保存到的database的名称</li><li>store-interval，表示保存数据的周期</li><li>store-path，在pushers中包含<code>file</code>时生效，表示监控指标保存的路径和文件名称模板</li><li>http-endpoint，表示监控指标通过http发送到的endpoint</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>这里使用<code>127.0.0.1:8086</code>,端口与下面[http]中配置的一样，说明会将监控指标发送给在127.0.0.1:8086下暴露端口的openGemini数据库结点上</p></div><h2 id="ts-monitor配置文件" tabindex="-1"><a class="header-anchor" href="#ts-monitor配置文件" aria-hidden="true">#</a> ts-monitor配置文件</h2><p>ts-monitor的配置文件，在代码给的模板配置文件中已经有了详细的注释。</p><div class="language-editorconfig line-numbers-mode" data-ext="editorconfig"><pre class="language-editorconfig"><code><span class="token section selector"><span class="token punctuation">[</span>monitor<span class="token punctuation">]</span></span>
    <span class="token comment"># localhost ip</span>
    <span class="token key attr-name">host</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{addr}}&quot;</span>
    <span class="token comment"># Indicates the path of the metric file generated by the kernel. References openGemini.conf: [monitor] store-path</span>
    <span class="token comment"># metric-path cannot have subdirectories</span>
    <span class="token key attr-name">metric-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/metric&quot;</span>
    <span class="token comment"># Indicates the path of the log file generated by the kernel. References openGemini.conf: [logging] path</span>
    <span class="token comment"># error-log-path cannot have subdirectories</span>
    <span class="token key attr-name">error-log-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/logs&quot;</span>
    <span class="token comment"># Data disk path. References openGemini.conf: [data] store-data-dir</span>
    <span class="token key attr-name">disk-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/data&quot;</span>
    <span class="token comment"># Wal disk path. References openGemini.conf: [data]  store-wal-dir</span>
    <span class="token key attr-name">aux-disk-path</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;/tmp/openGemini/data/wal&quot;</span>
    <span class="token comment"># Name of the process to be monitored. Optional Value: ts-store,ts-sql,ts-meta.</span>
    <span class="token comment"># Determined based on the actual process running on the local node.</span>
    <span class="token key attr-name">process</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;ts-store,ts-sql,ts-meta&quot;</span>
    <span class="token comment"># the history file reported error-log names.</span>
    <span class="token key attr-name">history-file</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;history.txt&quot;</span>
    <span class="token comment"># Is the metric compressed.</span>
    <span class="token key attr-name">compress</span> <span class="token value attr-value"><span class="token punctuation">=</span> false</span>

<span class="token section selector"><span class="token punctuation">[</span>report<span class="token punctuation">]</span></span>
    <span class="token comment"># Address for metric data to be reported.</span>
    <span class="token key attr-name">address</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;{{report_addr}}:8086&quot;</span>
    <span class="token comment"># Database name for metric data to be reported.</span>
    <span class="token key attr-name">database</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;monitor&quot;</span>
    <span class="token key attr-name">rp</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;autogen&quot;</span>
    <span class="token key attr-name">rp-duration</span> <span class="token value attr-value"><span class="token punctuation">=</span> &quot;168h&quot;</span>
    <span class="token comment"># username = &quot;&quot;</span>
    <span class="token comment"># password = &quot;&quot;</span>
    <span class="token comment"># https-enable = false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>report的配置项中</p>`,10),v=i(`<h2 id="grafana" tabindex="-1"><a class="header-anchor" href="#grafana" aria-hidden="true">#</a> Grafana</h2><ol><li><p>启动集群和ts-monitor 在openGemini的项目目录下输入如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> scripts/install_cluster.sh
<span class="token function">bash</span> scripts/install_monitor.sh 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>ps</code>命令检验是否启动成功，应该能看到类似如下响应，启动了3个meta，3个store，1个sql和1个ts-monitor</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PID TTY          TIME CMD
<span class="token number">346114</span> pts/28   00:00:00 <span class="token function">bash</span>
<span class="token number">346353</span> pts/28   00:00:51 ts-meta
<span class="token number">346354</span> pts/28   00:00:50 ts-meta
<span class="token number">346355</span> pts/28   00:02:07 ts-meta
<span class="token number">346419</span> pts/28   00:01:12 ts-store
<span class="token number">346432</span> pts/28   00:00:51 ts-store
<span class="token number">346461</span> pts/28   00:00:55 ts-store
<span class="token number">346474</span> pts/28   00:00:28 ts-sql
<span class="token number">357880</span> pts/28   00:00:03 ts-monitor
<span class="token number">382071</span> pts/28   00:00:00 <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Grafana并查看监控数据</p><ul><li>由于openGemini与influxdb的协议是一致，配置数据源时选择influxdb</li></ul><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>增加dashboard，增加或导入一些已经有json配置文件，即可在grafana中看到OpenGemini的监控数据</li></ul><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol>',2);function k(b,h){const a=r("RouterLink");return p(),c("div",null,[m,s("ul",null,[s("li",null,[n("username和password是当"),e(a,{to:"/guide/security_user/authentication_and_authorization.html"},{default:t(()=>[n("openGemini开启认证")]),_:1}),n("时,用于认证的配置项")]),s("li",null,[n("https-enable与"),e(a,{to:"/guide/security_user/https.html"},{default:t(()=>[n("openGemini开启https")]),_:1}),n("时需要相应修改的配置项")])]),v])}const q=l(d,[["render",k],["__file","monitor.html.vue"]]);export{q as default};
