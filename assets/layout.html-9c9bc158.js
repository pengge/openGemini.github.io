import{_ as n,X as s,Y as a,a3 as t}from"./framework-a5f096d1.js";const p="/assets/layout_1-5c3a1cca.png",e="/assets/layout_2-22f8a094.png",o={},c=t('<h2 id="tssp数据格式" tabindex="-1"><a class="header-anchor" href="#tssp数据格式" aria-hidden="true">#</a> tssp数据格式</h2><h5 id="opengemini数据库的持久化数据文件后缀名为tssp-数据格式如下图所示" tabindex="-1"><a class="header-anchor" href="#opengemini数据库的持久化数据文件后缀名为tssp-数据格式如下图所示" aria-hidden="true">#</a> openGemini数据库的持久化数据文件后缀名为tssp，数据格式如下图所示：</h5><p><img src="'+p+'" alt="tssp数据格式" loading="lazy"> 该存储格式分成了6个部分：</p><ol><li>文件头：一个magic及version。</li><li>数据chunk。</li><li>数据chunk的索引ChunkMeta。</li><li>ChunkMeta的索引MetaIndex。</li><li>Trailer：记录data chunk区、ChunkMeta区、metaIndex区的offset、size、measurement名字，及sid的范围和时间范围。</li><li>最后8个字节，表是Trailer的位置。</li></ol><h5 id="其中的名词术语" tabindex="-1"><a class="header-anchor" href="#其中的名词术语" aria-hidden="true">#</a> 其中的名词术语：</h5><ul><li>Chunk：某一个时间段的5行数据按列压缩后，顺序存储在一起叫一个chunk。</li><li>Block：如果某一个时间段对应的行太大，比如有10000行，则按2000行进行一次按列压缩存放，这2000行按列分别压缩后顺序存放的数据块叫一个Block，那么10000行一共会产生5个block，这5个block合在一就是一个chunk。</li><li>Column：每个block中的数据都是按列压缩的，一列叫一个column。</li><li>ColumnMeta：column的min/max/sum/count等信息。</li><li>BlockMeta：Block的索引信息，time range、offset、size等。</li><li>ChunkMeta：Chunk data的索引，主要包含SID、time range、Chunk data在文件中的offset、size等，ChunkMeta按SID排序，查询是可按sid做二分查找。</li><li>MetaIndex：一个稀疏索引，对ChunkMeta按一定大小抽取一条组成的数组，是ChunkMeta的索引，主要有SID，time range，ChunkMeta在文件中的offset、size等。MetaIndex常驻内存，查询的时候按sid在MetaIndex中二分查得到一条MetaIndex item，再根据MetaIndex中offset、size读取ChunkMeta数据块，再在ChunkMeta数组中二分查询到对应的ChunkMeta就可以定位到sid对应的数据在文件在的位置了。</li></ul><h5 id="总体结构如下图所示" tabindex="-1"><a class="header-anchor" href="#总体结构如下图所示" aria-hidden="true">#</a> 总体结构如下图所示：</h5><figure><img src="'+e+`" alt="tssp总体结构" tabindex="0" loading="lazy"><figcaption>tssp总体结构</figcaption></figure><h2 id="源码解析" tabindex="-1"><a class="header-anchor" href="#源码解析" aria-hidden="true">#</a> 源码解析</h2><h5 id="msbuilder" tabindex="-1"><a class="header-anchor" href="#msbuilder" aria-hidden="true">#</a> MsBuilder</h5><p>数据存储主要由MsBuilder（engine/immutable/msbuilder.go）这个类负责，这个类把所有的数据保存到成员变量，最后统一写到磁盘。写记录的方法是WriteRecord，主要代码如下。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>MsBuilder<span class="token punctuation">)</span> <span class="token function">WriteRecord</span><span class="token punctuation">(</span>id <span class="token builtin">uint64</span><span class="token punctuation">,</span> data <span class="token operator">*</span>record<span class="token punctuation">.</span>Record<span class="token punctuation">,</span> schema record<span class="token punctuation">.</span>Schemas<span class="token punctuation">,</span> nextFile <span class="token keyword">func</span><span class="token punctuation">(</span>fn TSSPFileName<span class="token punctuation">)</span> <span class="token punctuation">(</span>seq <span class="token builtin">uint64</span><span class="token punctuation">,</span> lv <span class="token builtin">uint16</span><span class="token punctuation">,</span> merge <span class="token builtin">uint16</span><span class="token punctuation">,</span> ext <span class="token builtin">uint16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>MsBuilder<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  <span class="token comment">//...</span>
  
  b<span class="token punctuation">.</span><span class="token function">WriteData</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
  
  <span class="token comment">//...</span>
	
  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token comment">// write index, works for colstore</span>
			<span class="token comment">//...</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> b<span class="token punctuation">.</span><span class="token function">writeIndex</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> schema<span class="token punctuation">,</span> indexFilePath<span class="token punctuation">,</span> <span class="token operator">*</span>b<span class="token punctuation">.</span>lock<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token comment">//...</span>
				<span class="token keyword">return</span> b<span class="token punctuation">,</span> err
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		fSize <span class="token operator">:=</span> b<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> fSize <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>Conf<span class="token punctuation">.</span>fileSizeLimit <span class="token operator">||</span> nextFile <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> b<span class="token punctuation">,</span> <span class="token boolean">nil</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> <span class="token function">switchTsspFile</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> data<span class="token punctuation">,</span> data<span class="token punctuation">,</span> rowsLimit<span class="token punctuation">,</span> fSize<span class="token punctuation">,</span> nextFile<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码先调用了WriteData方法来写DataChunk和ChunkMeta，然后调用了writeIndex方法来写列存储的索引，最后调用了switchTsspFile返回参数供最后写入磁盘。当需要写入磁盘时调用WritIntoFile方法写入磁盘。主要代码如下。</p><p>WriteData方法调用了chunkBuilder.EncodeChunk来保存了chunk数据和chunkMeta数据。 switchTsspFile方法创建了一个新的Tssp文件，然后把所有信息放进了新的MsBuilder中返回。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>MsBuilder<span class="token punctuation">)</span> <span class="token function">WriteData</span><span class="token punctuation">(</span>id <span class="token builtin">uint64</span><span class="token punctuation">,</span> data <span class="token operator">*</span>record<span class="token punctuation">.</span>Record<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token comment">//...</span>

	b<span class="token punctuation">.</span>chunkBuilder<span class="token punctuation">.</span><span class="token function">setChunkMeta</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>cm<span class="token punctuation">)</span>
	b<span class="token punctuation">.</span>encodeChunk<span class="token punctuation">,</span> err <span class="token operator">=</span> b<span class="token punctuation">.</span>chunkBuilder<span class="token punctuation">.</span><span class="token function">EncodeChunk</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> b<span class="token punctuation">.</span>dataOffset<span class="token punctuation">,</span> data<span class="token punctuation">,</span> b<span class="token punctuation">.</span>encodeChunk<span class="token punctuation">)</span>
	<span class="token comment">//...</span>
	b<span class="token punctuation">.</span>dataOffset <span class="token operator">+=</span> <span class="token function">int64</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>size<span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">writeToDisk</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">RowNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>

	minTime<span class="token punctuation">,</span> maxTime <span class="token operator">:=</span> b<span class="token punctuation">.</span>cm<span class="token punctuation">.</span><span class="token function">MinMaxTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>idCount <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>minTime <span class="token operator">=</span> minTime
		b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>maxTime <span class="token operator">=</span> maxTime
		b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>minId <span class="token operator">=</span> id
	<span class="token punctuation">}</span>

	b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>idCount<span class="token operator">++</span>
	b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>maxId <span class="token operator">=</span> id
	<span class="token keyword">if</span> b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>minTime <span class="token operator">&gt;</span> minTime <span class="token punctuation">{</span>
		b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>minTime <span class="token operator">=</span> minTime
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>maxTime <span class="token operator">&lt;</span> maxTime <span class="token punctuation">{</span>
		b<span class="token punctuation">.</span>trailer<span class="token punctuation">.</span>maxTime <span class="token operator">=</span> maxTime
	<span class="token punctuation">}</span>
  <span class="token comment">//...</span>

	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>MsBuilder<span class="token punctuation">)</span> <span class="token function">writeIndex</span><span class="token punctuation">(</span>writeRec <span class="token operator">*</span>record<span class="token punctuation">.</span>Record<span class="token punctuation">,</span> pkSchema record<span class="token punctuation">.</span>Schemas<span class="token punctuation">,</span> filepath<span class="token punctuation">,</span> lockpath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token comment">// Generate the primary key record from the sorted chunk based on the primary key.</span>
	pkRec<span class="token punctuation">,</span> pkMark<span class="token punctuation">,</span> err <span class="token operator">:=</span> b<span class="token punctuation">.</span>pkIndexWriter<span class="token punctuation">.</span><span class="token function">CreatePrimaryIndex</span><span class="token punctuation">(</span>writeRec<span class="token punctuation">,</span> pkSchema<span class="token punctuation">,</span> colstore<span class="token punctuation">.</span>RowsNumPerFragment<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	indexBuilder <span class="token operator">:=</span> colstore<span class="token punctuation">.</span><span class="token function">NewIndexBuilder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lockpath<span class="token punctuation">,</span> filepath<span class="token punctuation">)</span>
	err <span class="token operator">=</span> indexBuilder<span class="token punctuation">.</span><span class="token function">WriteData</span><span class="token punctuation">(</span>pkRec<span class="token punctuation">)</span>
	<span class="token keyword">defer</span> indexBuilder<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	b<span class="token punctuation">.</span>pkRec <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>pkRec<span class="token punctuation">,</span> pkRec<span class="token punctuation">)</span>
	b<span class="token punctuation">.</span>pkMark <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>pkMark<span class="token punctuation">,</span> pkMark<span class="token punctuation">)</span>

	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">switchTsspFile</span><span class="token punctuation">(</span>msb <span class="token operator">*</span>MsBuilder<span class="token punctuation">,</span> rec<span class="token punctuation">,</span> totalRec <span class="token operator">*</span>record<span class="token punctuation">.</span>Record<span class="token punctuation">,</span> rowsLimit <span class="token builtin">int</span><span class="token punctuation">,</span> fSize <span class="token builtin">int64</span><span class="token punctuation">,</span>
	nextFile <span class="token keyword">func</span><span class="token punctuation">(</span>fn TSSPFileName<span class="token punctuation">)</span> <span class="token punctuation">(</span>seq <span class="token builtin">uint64</span><span class="token punctuation">,</span> lv <span class="token builtin">uint16</span><span class="token punctuation">,</span> merge <span class="token builtin">uint16</span><span class="token punctuation">,</span> ext <span class="token builtin">uint16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>MsBuilder<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	f<span class="token punctuation">,</span> err <span class="token operator">:=</span> msb<span class="token punctuation">.</span><span class="token function">NewTSSPFile</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		msb<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;new file fail&quot;</span><span class="token punctuation">,</span> zap<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> msb<span class="token punctuation">.</span>fd<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zap<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> msb<span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	msb<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;switch tssp file&quot;</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;rowsLimit&quot;</span><span class="token punctuation">,</span> rowsLimit<span class="token punctuation">)</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;rows&quot;</span><span class="token punctuation">,</span> rec<span class="token punctuation">.</span><span class="token function">RowNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;totalRows&quot;</span><span class="token punctuation">,</span> totalRec<span class="token punctuation">.</span><span class="token function">RowNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token string">&quot;fileSize&quot;</span><span class="token punctuation">,</span> fSize<span class="token punctuation">)</span><span class="token punctuation">,</span>
		zap<span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token string">&quot;sizeLimit&quot;</span><span class="token punctuation">,</span> msb<span class="token punctuation">.</span>Conf<span class="token punctuation">.</span>fileSizeLimit<span class="token punctuation">)</span><span class="token punctuation">)</span>

	msb<span class="token punctuation">.</span>Files <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>Files<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
	seq<span class="token punctuation">,</span> lv<span class="token punctuation">,</span> merge<span class="token punctuation">,</span> ext <span class="token operator">:=</span> <span class="token function">nextFile</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>FileName<span class="token punctuation">)</span>
	msb<span class="token punctuation">.</span>FileName<span class="token punctuation">.</span><span class="token function">SetSeq</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span>
	msb<span class="token punctuation">.</span>FileName<span class="token punctuation">.</span><span class="token function">SetMerge</span><span class="token punctuation">(</span>merge<span class="token punctuation">)</span>
	msb<span class="token punctuation">.</span>FileName<span class="token punctuation">.</span><span class="token function">SetExtend</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span>
	msb<span class="token punctuation">.</span>FileName<span class="token punctuation">.</span><span class="token function">SetLevel</span><span class="token punctuation">(</span>lv<span class="token punctuation">)</span>

	builder <span class="token operator">:=</span> <span class="token function">NewMsBuilder</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> msb<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msb<span class="token punctuation">.</span>lock<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>Conf<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>MaxIds<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>FileName<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>tier<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>sequencer<span class="token punctuation">,</span> rec<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	builder<span class="token punctuation">.</span>Files <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Files<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>Files<span class="token operator">...</span><span class="token punctuation">)</span>
	builder<span class="token punctuation">.</span>pkRec <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>pkRec<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>pkRec<span class="token operator">...</span><span class="token punctuation">)</span>
	builder<span class="token punctuation">.</span>pkMark <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>pkMark<span class="token punctuation">,</span> msb<span class="token punctuation">.</span>pkMark<span class="token operator">...</span><span class="token punctuation">)</span>
	builder<span class="token punctuation">.</span><span class="token function">WithLog</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
	<span class="token keyword">return</span> builder<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">WriteIntoFile</span><span class="token punctuation">(</span>msb <span class="token operator">*</span>immutable<span class="token punctuation">.</span>MsBuilder<span class="token punctuation">,</span> tmp <span class="token builtin">bool</span><span class="token punctuation">,</span> withPKIndex <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	f<span class="token punctuation">,</span> err <span class="token operator">:=</span> msb<span class="token punctuation">.</span><span class="token function">NewTSSPFile</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		msb<span class="token punctuation">.</span>Files <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>Files<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token operator">!</span>withPKIndex <span class="token punctuation">{</span>
		err <span class="token operator">=</span> immutable<span class="token punctuation">.</span><span class="token function">RenameTmpFiles</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>Files<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		err <span class="token operator">=</span> immutable<span class="token punctuation">.</span><span class="token function">RenameTmpFilesWithPKIndex</span><span class="token punctuation">(</span>msb<span class="token punctuation">.</span>Files<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),i=[c];function u(l,k){return s(),a("div",null,i)}const d=n(o,[["render",u],["__file","layout.html.vue"]]);export{d as default};
