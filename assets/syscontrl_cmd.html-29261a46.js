import{_ as a,X as e,Y as s,a3 as n}from"./framework-a5f096d1.js";const p={},r=n(`<p>本章节主要介绍openGemini内置的运维命令。</p><h2 id="store类" tabindex="-1"><a class="header-anchor" href="#store类" aria-hidden="true">#</a> store类</h2><p><strong>1. 数据刷新（DataFlush）</strong></p><p>作用：内存中的数据强制下盘</p><p>参数：mod=flush</p><p>例：所有节点内存上的数据强制下盘</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=flush&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 压缩（compactionEn）</strong></p><p>作用：设置shard是否开启compaction</p><ul><li><p>allshards=true</p><p>设置所有的分片的compaction</p></li><li><p>allshards=false</p><p>设置指定的分片的compaction</p></li></ul><p>参数：mod=compen&amp;switchon=true/false&amp;allshards=true/false&amp;shid=[number]</p><p>例：设置shard开启compaction</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=compen&amp;switchon=true&amp;allshards=true&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3. 压缩合并（compmerge）</strong></p><p>作用：设置shard是否开启merge(乱序合并)</p><ul><li><p>allshards=true</p><p>设置所有的分片的merge</p></li><li><p>allshards=false</p><p>设置指定的分片的merge</p></li></ul><p>参数：mod=merge&amp;switchon=true/false&amp;allshards=true/false&amp;shard_id=[number]</p><p>例：设置所d=4的shard开启merge</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=merge&amp;switchon=true&amp;allshards=false&amp;shard_id=4&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4. 快照（snapshot）</strong></p><p>作用：设置快照的时间间隔</p><p>参数：mod=snapshot&amp;duration=[time duration]</p><p>例：设置快照的时间间隔为30分钟</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=snapshot&amp;duration=30m&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>5. 故障点（Failpoint）</strong></p><p>作用：启用/禁用故障点</p><p>参数：mod=fallpoint&amp;switchon=true/false&amp;point=[]&amp;term=[]</p><p>例：</p><ul><li>禁用故障点xxx</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=fallpoint&amp;switch=false&amp;point=xxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>带有term参数启用故障点xxx</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=fallpoint&amp;switch=true&amp;point=xxx&amp;term=xxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>6. 降采样顺序（DownSampleInOrder）</strong></p><p>作用：设置降采样遍历顺序（顺序或逆序寻找符合条件的DownSamplePolicy）</p><p>参数：mod=downsample_in_order&amp;order=true/false（true顺序，false逆序）</p><p>例：设置为顺序</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=downsample_in_order&amp;order=true&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>7. 节点验证（verifyNode）</strong></p><p>作用：设置是否验证节点状态</p><p>参数：mod=verifynode&amp;switchon=true/false</p><p>例：禁用验证节点状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=verifynode&amp;switchon=false&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>8. 只读操作（ReadOnly）</strong></p><p>作用：设置engine读写权限是否是只读的</p><p>参数：mod=readonly&amp;switchon=true/false&amp;allnodes=y</p><p>例：</p><ul><li>向所有节点发设置engine权限只读</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -i -XPOST &#39;http://127.0.0.1:8086/debug/ctrl?mod=readonly&amp;switchon=true&amp;allnodes=y&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>向指定的host发设置engine权限只读</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> &#39;http://127.0.0.1:8086/debug/ctrl?mod<span class="token operator">=</span>readonly<span class="token operator">&amp;</span><span class="token assign-left variable">switchon</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sql类" tabindex="-1"><a class="header-anchor" href="#sql类" aria-hidden="true">#</a> sql类</h2><p>如下命令将发送给所有节点</p><p><strong>1. chunk_reader并发控制(ChunkReaderParallel)</strong></p><p>作用：设置最大chunk_reader并发的数量</p><p>参数：mod=chunk_reader_parallel&amp;limit=[number] （number&gt;=0）</p><p>例：设置最大chunk_reader并发的数量为4</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=chunk_reader_parallel&amp;limit=4&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 二叉树合并策略（BinaryTreeMerge）</strong></p><p>作用：设置查询时是否启用二叉树合并策略</p><p>参数：mod=binary_tree_merge&amp;enabled=1/0</p><p>例：设置为查询时使用二叉树合并策略</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=binary_tree_merge&amp;enabled=1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3. 打印逻辑计划（PrintLogicalPlan）</strong></p><p>作用：设置是否打印逻辑计划</p><p>参数：mod=print_logical_plan&amp;enabled=1/0</p><p>例：设置为查询时打印出逻辑计划</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=print_logical_plan&amp;enabled=1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4. 滑动窗口推送（SlidingWindowPushUp）</strong></p><p>作用：设置在支持聚合下推优化计划和shema没有子查询的情况下是否启用的是滑动窗口推送</p><p>参数：mod=sliding_window_push_up&amp;enabled=1/0</p><p>例：在支持聚合下推优化计划和shema没有子查询的情况下<strong>启用</strong>的是滑动窗口推送</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=sliding_window_push_up&amp;enabled=1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>5. 日志行（LogRows）</strong></p><p>作用：设置打印数据的规则，用于排查是否丢数据</p><p>参数：mod=log_rows&amp;switchon=true&amp;rules=主节点标记,key1=value1,key2=value2.....</p><p>例：设置为新的日志行规则主节点标记为mst，标签信息为tk1=tv1</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=log_rows&amp;switchon=true&amp;rules=mst,tk1=tv1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>6. 强制广播查询（ForceBroadcastQuery）</strong></p><p>作用：设置进行强制广播查询开关</p><ul><li>开：针对所有分片</li><li>关：针对计算得到的分片</li></ul><p>参数：mod=force_broadcast_query&amp;enabled=1/0</p><p>例：强制广播查询</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=force_broadcast_query&amp;enabled=1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>7. 强制时间过滤（TimeFilterProtection）</strong></p><p>作用：设置查询操作是否必须有时间过滤</p><p>参数：mod=time_filter_protection&amp;enabled=true/false</p><p>例：设置为查询操作必须时间过滤</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8086/debug/ctrl?mod=time_filter_protection&amp;enabled=true&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="meta类" tabindex="-1"><a class="header-anchor" href="#meta类" aria-hidden="true">#</a> meta类</h2><p><strong>1. 切换Leader（SwitchLeader）</strong></p><p>作用：切换Leader</p><blockquote><p>注：Leader执行该命令能生效，即切换Leader，Follower执行该命令会返回Leader地址</p></blockquote><p>参数：无</p><p>例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-XPOST</span> <span class="token string">&#39;http://127.0.0.1:8091/leadershiptransfer&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 查看节点信息（ShowNodeInfo）</strong> 作用：查看节点的信息</p><p>参数：witch=raft-stat</p><p>例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-GET</span> http://127.0.0.1:8091/debug?witch<span class="token operator">=</span>raft-stat <span class="token parameter variable">-H</span> <span class="token string">&#39;all:y&#39;</span> <span class="token operator">|</span> python <span class="token parameter variable">-mjson.tool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,99),l=[r];function t(i,d){return e(),s("div",null,l)}const c=a(p,[["render",t],["__file","syscontrl_cmd.html.vue"]]);export{c as default};
