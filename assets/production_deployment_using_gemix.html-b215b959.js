import{_ as i,X as l,Y as o,Z as a,a1 as n,$ as t,a3 as s,C as p}from"./framework-a5f096d1.js";const c={},r=s(`<h1 id="使用-gemix-部署-opengemini-集群" tabindex="-1"><a class="header-anchor" href="#使用-gemix-部署-opengemini-集群" aria-hidden="true">#</a> 使用 gemix 部署 openGemini 集群</h1><p>gemix 是 openGemini 官方开发的集群运维工具，gemix cluster 是 gemix 提供的使用 Golang 编写的集群管理组件，通过 gemix cluster 组件就可以进行日常的运维工作，包括安装、启动、关闭、卸载、升级 openGemini 集群，以及管理 openGemini 集群参数。</p><p>目前 gemix 可以支持部署 openGemini cluster 以及监控系统。本文将介绍不同集群拓扑的具体部署步骤。</p><h2 id="第-1-步-软硬件环境要求及前置检查" tabindex="-1"><a class="header-anchor" href="#第-1-步-软硬件环境要求及前置检查" aria-hidden="true">#</a> 第 1 步：软硬件环境要求及前置检查</h2><p><a href="./software_and_hardware_requirements">软硬件环境要求</a></p><p><a href="./check_before_deployment">环境与系统配置检查</a></p><h2 id="第-2-步-在执行机上安装-gemix-组件" tabindex="-1"><a class="header-anchor" href="#第-2-步-在执行机上安装-gemix-组件" aria-hidden="true">#</a> 第 2 步：在执行机上安装 gemix 组件</h2><p>在执行机上部署 gemix 组件有两种方式：在线部署和离线部署。</p><h3 id="在线部署" tabindex="-1"><a class="header-anchor" href="#在线部署" aria-hidden="true">#</a> 在线部署</h3><ol><li><p>执行如下命令安装 gemix 工具：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">install</span> github.com/openGemini/gemix@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>按如下步骤设置 gemix 环境变量：</p><p>i. 重新声明全局环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> .bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ii. 确认 gemix 工具是否安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">which</span> gemix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="离线部署" tabindex="-1"><a class="header-anchor" href="#离线部署" aria-hidden="true">#</a> 离线部署</h3>`,11),d={href:"https://github.com/openGemini/openGemini-UP/releases",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>解压，将 <code>gemix</code> 工具放到 <code>usr/local/bin</code>下面。</p><h2 id="第-3-步-初始化集群拓扑文件" tabindex="-1"><a class="header-anchor" href="#第-3-步-初始化集群拓扑文件" aria-hidden="true">#</a> 第 3 步：初始化集群拓扑文件</h2><p>执行 vi topology.yaml，查看配置文件的内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token key atrule">ssh_port</span><span class="token punctuation">:</span> <span class="token number">22</span>
  <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">&quot;root&quot;</span>
  <span class="token key atrule">log_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-deploy/logs&quot;</span>
  <span class="token key atrule">deploy_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-deploy&quot;</span>
<span class="token key atrule">ts-meta</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
<span class="token key atrule">ts-sql</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
<span class="token key atrule">ts-store</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/data&quot;</span>
    <span class="token key atrule">meta_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/data&quot;</span>
    <span class="token key atrule">meta_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
    <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/data&quot;</span>
    <span class="token key atrule">meta_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/meta&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第-4-步-执行安装命令" tabindex="-1"><a class="header-anchor" href="#第-4-步-执行安装命令" aria-hidden="true">#</a> 第 4 步：执行安装命令</h2><p>使用以下命令会自动下载openGemini v1.1.0版本包到执行机，然后拷贝到所有的实例节点中，并初始化好启动的配置文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster <span class="token function">install</span> <span class="token parameter variable">-n</span> gemini-test <span class="token parameter variable">-v</span> v1.1.0 <span class="token parameter variable">-y</span> ./topology.yaml <span class="token parameter variable">--user</span> root <span class="token punctuation">[</span>--password root<span class="token punctuation">]</span> <span class="token punctuation">[</span>--key /home/root/.ssh/gcp_rsa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上安装示例中：</p>`,8),m=a("li",null,[a("code",null,"gemini-test"),n(" 为安装的集群名称。")],-1),h=a("code",null,"v1.1.0",-1),k={href:"https://github.com/openGemini/openGemini/releases/latest",target:"_blank",rel:"noopener noreferrer"},v=a("li",null,[n("初始化配置文件为 "),a("code",null,"topology.yaml"),n("。")],-1),g=a("li",null,[a("code",null,"--user root"),n(" 表示通过 root 用户登录到目标主机完成集群部署，该用户需要有 ssh 到目标机器的权限，并且在目标机器有 sudo 权限。也可以用其他有 ssh 和 sudo 权限的用户完成部署。")],-1),b=a("li",null,"[--key] 及 [--password] 为可选项，如果已经配置免密登录目标机，则不需填写。否则选择其一即可，[--key] 为可登录到目标机的 root 用户（或 --user 指定的其他用户）的私钥，也可使用 [--password] 输入该用户的密码。",-1),_=s(`<p>预期日志结尾输出 <code>Successfully installed the openGemini cluster with version: v1.1.0</code> 关键词，表示部署成功。</p><h2 id="第-5-步-启动集群" tabindex="-1"><a class="header-anchor" href="#第-5-步-启动集群" aria-hidden="true">#</a> 第 5 步：启动集群</h2><p>使用以下命令会将所有实例节点的相关进程启动。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>一般情况下 gemix 会在实例机器上创建 <code>topology.yaml</code> 中约定的用户和组，以下情况例外：</p><ul><li><code>topology.yaml</code> 中设置的用户名在目标机器上已存在。</li><li>在命令行上使用了参数 <code>--skip-create-user</code> 明确指定跳过创建用户的步骤。</li></ul></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster start <span class="token parameter variable">-n</span> gemini-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预期日志结尾打印进程、磁盘等监控统计数据，表示启动集群成功。</p><h2 id="第-6-步-验证集群运行状态" tabindex="-1"><a class="header-anchor" href="#第-6-步-验证集群运行状态" aria-hidden="true">#</a> 第 6 步：验证集群运行状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster status <span class="token parameter variable">-n</span> gemini-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预期结果输出：各节点 <code>相关的进程是RUNNING</code> 说明集群状态正常。</p><h2 id="探索更多" tabindex="-1"><a class="header-anchor" href="#探索更多" aria-hidden="true">#</a> 探索更多</h2><p>如果你使用kubernetes部署了 openGemini，接下来可参阅以下文档：</p><ul><li><a href="/zh/deploy-on-k8s/quick_start/get_started">在 Kubernetes 上部署 openGemini</a></li></ul>`,12);function y(x,f){const e=p("ExternalLinkIcon");return l(),o("div",null,[r,a("p",null,[n("在"),a("a",d,[n("官方下载页面"),t(e)]),n("选择对应版本的 gemix 离线镜像包。")]),u,a("ul",null,[m,a("li",null,[h,n(" 为安装的集群版本，可以通过 "),a("a",k,[n("https://github.com/openGemini/openGemini/releases/latest"),t(e)]),n(" 来查看 gemix 支持的最新可用版本。")]),v,g,b]),_])}const G=i(c,[["render",y],["__file","production_deployment_using_gemix.html.vue"]]);export{G as default};
